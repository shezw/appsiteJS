"use strict";

var Aps, ApsMd, CONFIGS;

Aps || (Aps = {}), ApsMd || (ApsMd = {}), CONFIGS || (CONFIGS = {}), window.vdom = window.VD = function(a, b) {
    return a ? Aps.dom.get(a, b) :this;
}, window.vlist = window.VL = function(a, b) {
    return a ? Aps.dom.list(a, b) :this;
}, window.i18n = function(a, b) {
    return b ? ApsMd.locale[Aps.setting.language][a](b) || a :ApsMd.locale[Aps.setting.language][a] || a;
}, Aps.fn = function(a) {
    var c, b = {
        options:{
            update:0,
            expire:0,
            before:0,
            callback:0,
            errorCall:0,
            url:CONFIGS.apihost,
            bindList:[],
            requesttype:"POST",
            loadingtype:"Window",
            parameters:{
                parameters:[],
                action:""
            },
            headers:{}
        },
        resetOptions:function() {
            this.options = {
                update:0,
                expire:0,
                before:0,
                callback:0,
                errorCall:0,
                url:CONFIGS.apihost,
                bindList:[],
                requesttype:"POST",
                loadingtype:"Window",
                parameters:{
                    parameters:[],
                    action:""
                },
                headers:{}
            };
        },
        setUpdate:function() {
            this.options.update = !0;
        },
        setCros:function() {
            this.options.cros = 1;
        },
        setUrl:function(a) {
            this.options.url = a;
        },
        setExpire:function(a) {
            this.options.expire = a;
        },
        setParams:function(a) {
            this.options.parameters.parameters = a;
        },
        setHeaders:function(a) {
            this.options.headers = a;
        },
        setBefore:function(a) {
            this.options.before = a;
        },
        setCallback:function(a) {
            this.options.callback = a;
        },
        setErrorCall:function(a) {
            this.options.errorCall = a;
        },
        setOptions:function(a, b) {
            this.options[a] = b;
        },
        addParams:function(a, b) {
            if ("object" == typeof a) for (let; c in a; ) this.options.parameters.parameters[c] = a[c]; else this.options.parameters.parameters[a] = b;
        },
        addHeaders:function(a, b) {
            if ("object" == typeof a) for (let; c in a; ) this.options.headers[c] = a[c]; else this.options.headers[a] = b;
        },
        setProperty:function(a, b) {
            Aps.local.set(a, b), this[a] = b;
        },
        removeProperty:function(a) {
            Aps.local.remove(a), delete this[a];
        },
        setAction:function(a) {
            "RESTFUL" == CONFIGS.apimode ? this.setUrl(APILIST.getApiUrl(a)) :this.options.parameters.action = a;
        },
        post:function(a, b, c, d) {
            var k, l, e = d ? d.expire || 3600 :3600, f = d ? d.needLogin || 0 :0, g = d ? d.collect || 0 :0, h = d ? d.update || 0 :0, i = d ? d.gajax || 0 :0, j = d ? d.url || 0 :0;
            if (this.resetOptions(), this.setAction(a), this.setParams(c || {}), "object" == typeof b ? (k = b.success || null, 
            l = b.error || null) :"function" == typeof b && (k = b || null), f) {
                if (!Aps.user.forcedLogin()) return;
                this.addHeaders("userid", Aps.user.userid), this.addHeaders("token", Aps.user.token);
            }
            h && this.setUpdate(), i && this.setOptions("gajax", 1), g && this.setOptions("collect", g), 
            j && this.setOptions("url", j), l && this.setErrorCall(l), this.setOptions("requesttype", "POST"), 
            this.setExpire(e), this.setCallback(k), this.addHeaders("language", Aps.setting.language), 
            Aps.cajax.request(this.options);
        },
        get:function(a, b, c, d) {
            var i, j, e = d ? d.expire || 3600 :3600, f = d ? d.needLogin || 0 :0, g = d ? d.update || 0 :0, h = d ? d.gajax || 0 :0;
            if (this.resetOptions(), this.setUrl(a), this.setParams(c || {}), "object" == typeof b ? (i = b.success || null, 
            j = b.error || null) :"function" == typeof b && (i = b || null), f) {
                if (!Aps.user.forcedLogin()) return;
                this.addParams("userid", Aps.user.userid), this.addParams("token", Aps.user.token);
            }
            g && this.setUpdate(), h && this.setOptions("gajax", 1), this.setOptions("requesttype", "GET"), 
            this.setExpire(e), this.setCallback(i), this.setErrorCall(j || 0), this.addHeaders("language", Aps.setting.language), 
            Aps.cajax.request(this.options);
        },
        _listen:Aps._listen
    };
    for (c in b) a[c] = a[c] || b[c];
    return a;
}, Aps._listen = function(a, b) {
    var c = a || this;
    return c._datas = {}, c._listen = function() {
        for (var a in c) "_datas" !== a && "function" != typeof c[a] && (key = a, val = c[key], 
        c._datas[key] = val, Object.defineProperty(c, key, {
            enumerable:!0,
            configurable:!0,
            get:function() {
                return c._datas[key];
            },
            set:function(a) {
                c._notify(key, a), c._datas[key] = a;
            }
        }));
    }, c._notify = b || c._notify || function(a, b) {
        console.info(c, "_notify default:", a, b);
    }, c._listen(), c;
}, Aps.dom = {
    vmap:{},
    styles:{
        css:{}
    },
    vdom:window.vdom,
    init:function() {
        var a = function(a, b) {
            return a ? Aps.dom.get(a, b) :this;
        };
        window.vdom = a, this.vdom = window.vdom;
    },
    vf:{
        addClass:function(a) {
            var b, c;
            if (a.indexOf(" ") > -1) {
                b = a.split(" ");
                for (c in b) this.el.classList.add(b[c]);
            } else if ("object" == typeof a) for (c in a) this.el.classList.add(a[c]); else {
                if (!a) return this;
                this.el.classList.add(a);
            }
            return this;
        },
        hasClass:function(a) {
            return this.el.classList.value.indexOf(a) > -1;
        },
        removeClass:function(a) {
            var b, c;
            if (a.indexOf(" ") > -1) {
                b = a.split(" ");
                for (c in b) this.el.classList.remove(b[c]);
            } else this.el.classList.remove(a);
            return this;
        },
        toggleClass:function(a) {
            return this.hasClass(a) ? this.removeClass(a) :this.addClass(a), this;
        },
        css:function(a, b) {
            return b ? (this.el.style[a] = b, this) :this.el.style[a];
        },
        styles:function(a) {
            for (var b in a) this.el.style[b] = a[b];
            return this;
        },
        setAttr:function(a) {
            if ("object" == typeof a) {
                for (var b in a) this.attr(b, a[b]);
                return this;
            }
        },
        id:function(a) {
            return a && (this.el.id = a), a ? this :this.el.id;
        },
        has:function(a) {
            return null !== this[a] && void 0 !== this[a];
        },
        attr:function(a, b) {
            return b && this.el.setAttribute(a, b), "undefined" != typeof b ? this :this.el.getAttribute(a);
        },
        disable:function() {
            return this.attr("disabled", "disabled");
        },
        enable:function() {
            return this.removeAttr("disabled");
        },
        removeAttr:function(a) {
            return this.el.removeAttribute(a), this;
        },
        text:function(a) {
            return a && (this.el.textContent = a), a ? this :this.el.textContent;
        },
        html:function(a) {
            return "object" == typeof a && a._vdom ? a = a.HTML() :"object" == typeof a && (a = VD(a).HTML()), 
            a && (this.el.innerHTML = a), a ? this :this.el.innerHTML;
        },
        HTML:function(a) {
            return "object" == typeof a && a._vdom ? a = a.HTML() :"object" == typeof a && (a = VD(a).HTML()), 
            a && (this.el.outerHTML = a), a ? this :this.el.outerHTML;
        },
        append:function(a) {
            return "object" == typeof a && a._vdom ? this.el.appendChild(a.el) :this.append(VD(a)), 
            this;
        },
        prepend:function(a) {
            if ("object" == typeof a) {
                if (!this.el.hasChildNodes()) return this.append(a);
                this.el.insertBefore(a.el, this.el.firstChild);
            } else this.prepend(VD(a));
            return this;
        },
        empty:function() {
            return this.el.innerHTML = "", this;
        },
        remove:function() {
            return this.el.remove(), this.hash && delete vdom[this.hash], this.clearDom(), delete this, 
            this || 0;
        },
        clearDom:function() {
            for (var a in this) this[a] = null;
        },
        value:function(a) {
            var b = " SELECT OPTION INPUT RADIO CHECKBOX".indexOf(this.el.tagName) <= 0;
            return a && (this.el[b ? "innerHTML" :"value"] = a), a ? this :this.el[b ? "innerHTML" :"value"];
        },
        property:function(a, b) {
            return void 0 !== b && null !== b && (this.el[a] = b), void 0 !== b && null !== b ? this :this.el[a];
        },
        show:function() {
            return this.el.style.display = "", this;
        },
        hide:function() {
            return this.el.style.display = "none", this;
        },
        fadeIn:function(a) {
            return this.show(), this.animate(ApsMd.animate.fadeIn, 0, a), this;
        },
        fadeOut:function(a) {
            return self = this, this.animate(ApsMd.animate.fadeOut, 300, function() {
                self.remove(), "function" == typeof a && a();
            }), this;
        },
        focus:function() {
            return this.el.focus(), this;
        },
        blur:function() {
            return this.el.blur(), this;
        },
        toggle:function() {
            return this.el.style.display = "none" == this.el.style.display ? "" :"none", this;
        },
        index:function() {
            return Array.from(this.parent().el.children).indexOf(this.el);
        },
        find:function(a, b) {
            return b ? vlist(this.selector + " " + a) :vdom(this.selector + " " + a);
        },
        child:function(a, b) {
            return b ? vlist(this.selector + ">" + a) :vdom(this.selector + ">" + a);
        },
        finds:function(a) {
            return this.find(a, 1);
        },
        childs:function(a) {
            return this.child(a, 1);
        },
        parent:function() {
            return VD(this.el.parentNode);
        },
        brothers:function() {},
        on:function(a, b, c) {
            var d = this;
            return this.el.addEventListener(a, function(a) {
                b(d, a);
            }, c), this;
        },
        off:function(a, b) {
            var c = this;
            return this.el.removeEventListener(a, function(a) {
                b(c, a);
            }), this;
        },
        one:function(a, b, c) {
            c ? c.once = !0 :c = {
                once:!0
            };
            var d = this;
            return this.el.addEventListener(a, function(a) {
                b(d, a);
            }, c), this;
        },
        click:function(a, b) {
            return this.on("click", a, b);
        },
        fingerTouchFns:{
            run:function(a, b) {
                if (a.tCalls[b]) for (var c in a.tCalls[b]) a.tCalls[b][c](a);
            },
            _start:function(a, b) {
                a.tData.X_ = b.touches[0].clientX, a.tData.Y_ = b.touches[0].clientY, a.tData.T_ = b.timeStamp, 
                a.tData.tap = a.tData.longpress = 1, this.run(a, "start");
            },
            _move:function(a, b) {
                var c, d, e, f;
                a.tData._x = a.tData.x, a.tData._y = a.tData.y, a.tData._t = a.tData.t, a.tData.x = b.touches[0].clientX, 
                a.tData.y = b.touches[0].clientY, a.tData.t = b.timeStamp, c = (a.tData.t - a.tData._t) / 1e3, 
                d = (a.tData.x - a.tData._x) / c, e = (a.tData.y - a.tData._y) / c, f = e ? Math.abs(d / e) :10, 
                a.tData.ax = (d - a.tData.vx) / c / 1e3, a.tData.ay = (e - a.tData.vy) / c / 1e3, 
                a.tData.vx = d, a.tData.vy = e, a.tData.distanceX = a.tData.x - a.tData.X_, a.tData.distanceY = a.tData.y - a.tData.Y_, 
                a.tData.tap = a.tData.longpress = 0, a.tData.duration = a.tData.t - a.tData.T_, 
                a.tData._up = 0 > e && 1.62 > f, a.tData._down = e > 0 && 1.62 > f, a.tData._left = 0 > d && f > .62, 
                a.tData._right = d > 0 && f > .62, this.run(a, "move");
            },
            _end:function(a, b) {
                var c, d, e;
                a.tData._X = a.tData.x || a.tData.X_, a.tData._Y = a.tData.y || a.tData.Y_, a.tData._T = b.timeStamp, 
                a.tData.duration = a.tData._T - a.tData.T_, c = a.tData._X - a.tData.X_, d = a.tData._Y - a.tData.Y_, 
                e = c ? Math.abs(c / d) :10, a.tData.up = 0 > d && 1.62 > e, a.tData.down = d > 0 && 1.62 > e, 
                a.tData.left = 0 > c && e > .62, a.tData.right = c > 0 && e > .62, a.tData.tap = a.tData.tap && a.tData.duration > a.tData.conf.tap[0] && a.tData.duration < a.tData.conf.tap[1], 
                a.tData.longpress = a.tData.longpress && a.tData.duration > a.tData.conf.longpress[0] && a.tData.duration < a.tData.conf.longpress[1], 
                a.tData.up && !a.tData.lockY && this.run(a, "up"), a.tData.down && !a.tData.lockY && this.run(a, "down"), 
                a.tData.left && !a.tData.lockX && this.run(a, "left"), a.tData.right && !a.tData.lockX && this.run(a, "right"), 
                a.tData.tap && this.run(a, "tap"), a.tData.longpress && this.run(a, "longpress"), 
                a.tData.up && a.tData.left && this.run(a, "upleft"), a.tData.up && a.tData.right && this.run(a, "upright"), 
                a.tData.down && a.tData.left && this.run(a, "downleft"), a.tData.down && a.tData.right && this.run(a, "downright"), 
                this.run(a, "end");
            },
            _cancel:function(a, b) {
                a.tData._X = a.tData.x || a.tData.X_, a.tData._Y = a.tData.y || a.tData.Y_, a.tData._T = b.timeStamp, 
                this.run(a, "cancel");
            }
        },
        onTouch:function(a, b) {
            var c = function(a, b) {
                if (0 == a) return -1;
                for (var c in a) if (b == a[c]) return c;
                return -1;
            }, d = this, e = {
                tap:[ 50, 350 ],
                longpress:[ 500, 2e3 ]
            };
            return d.tData = d.tData || {
                _start:function(a, b) {
                    Aps.dom.vf.fingerTouchFns._start(a, b);
                },
                _move:function(a, b) {
                    Aps.dom.vf.fingerTouchFns._move(a, b);
                },
                _end:function(a, b) {
                    Aps.dom.vf.fingerTouchFns._end(a, b);
                },
                _cancel:function(a, b) {
                    Aps.dom.vf.fingerTouchFns._cancel(a, b);
                },
                conf:e,
                X_:null,
                Y_:null,
                T_:null,
                _X:null,
                _Y:null,
                _T:null,
                x:null,
                y:null,
                t:null,
                _x:null,
                _y:null,
                _t:null,
                tap:0,
                doubletap:0,
                longpress:0,
                up:0,
                down:0,
                left:0,
                right:0,
                _up:0,
                _down:0,
                _left:0,
                _right:0,
                ax:0,
                ay:0,
                vx:0,
                vy:0,
                duration:0
            }, d.tCalls = d.tCalls || {}, d.tCalls[a] = d.tCalls[a] || [], -1 == c(d.tCalls[a], b) && d.tCalls[a].push(b), 
            this.on("touchstart", d.tData._start), this.on("touchmove", d.tData._move), this.on("touchend", d.tData._end), 
            this.on("touchcancel", d.tData._cancel), this;
        },
        offTouch:function(a, b) {
            var e, c = function(a, b) {
                if (0 == a) return -1;
                for (var c in a) if (b == a[c]) return c;
                return -1;
            }, d = this;
            return a || b ? (d.tCalls = d.tCalls || {}, d.tCalls[a] = d.tCalls[a] || [], e = c(d.tCalls[a], "string" == typeof b ? b :b.toString()), 
            e > -1 && (d.tCalls[a][e] = 0), this) :(this.off("touchstart", d.tData._start), 
            this.off("touchmove", d.tData._move), this.off("touchend", d.tData._end), this.off("touchcancel", d.tData._cancel), 
            this);
        },
        onMultiTouch:function() {},
        offMultiTouch:function() {},
        animate:function(a, b, c) {
            var d, e, f, g, h, i, j, k, l, m, n, o, p;
            return "object" != typeof a ? (console.error("animate needs to be object struct! {name:name,frames:{}}, Current type is", typeof a), 
            a) :(d = function(a, b) {
                var e, f, c = " transform backface-visibility transform-origin box-sizing", d = "@keyframes " + b + "{";
                if ("string" == typeof a) return a;
                for (e in a) {
                    d += e + "%{";
                    for (f in a[e]) d += f + ":" + a[e][f] + ";";
                    d += "}";
                }
                if (d += "}\n", d += "@-webkit-keyframes " + b + "{", "string" == typeof a) return a;
                for (e in a) {
                    d += e + "%{";
                    for (f in a[e]) d += (c.indexOf(f) > 0 ? "-webkit-" + f :f) + ":" + a[e][f] + ";";
                    d += "}";
                }
                return d += "}\n";
            }, e = "Aps_" + Aps.dom.storagehash.hash(JSON.stringify([ a, g, f ])), f = "object" == typeof b ? b :{}, 
            g = "object" == typeof b ? (b.duration || 500) + "ms" :(b || 500) + "ms", h = "object" == typeof a ? a.name :a || "bounce", 
            i = f.delay ? f.delay + "ms" :"0ms", j = f.count || 1, k = f.end || "backwards", 
            l = f.alternate || "normal", m = f.transformorigin || "", n = a.curve || "ease-out", 
            "object" == typeof n && (n = "cubic-bezier(" + n[0] + "," + n[1] + "," + n[2] + "," + n[3] + "," + ")"), 
            f.infinite && (j = "infinite"), o = "{ animation-name:" + h + ";animation-duration:" + g + ";animation-timing-function: " + n + ";animation-delay: " + i + ";animation-iteration-count: " + j + ";animation-direction: " + l + ";" + "animation-fill-mode: " + k + ";" + (m ? "transform-origin: " + m + ";" :""), 
            o += "-webkit-animation-name:" + h + ";-webkit-animation-duration:" + g + ";-webkit-animation-timing-function:" + n + ";-webkit-animation-delay:" + i + ";-webkit-animation-iteration-count:" + j + ";-webkit-animation-direction:" + l + ";" + "-webkit-animation-fill-mode: " + k + ";" + (m ? "webkit-transform-origin: " + m + ";" :""), 
            o += "}\n", p = Aps.dom.styles.css[e] ? e :Aps.dom.style(e, o + d(a.frames, a.name)), 
            this.animateCSS(p, 1, c), this);
        },
        animateCSS:function(a, b, c) {
            var d = function(a) {
                var c, b = {
                    animation:"animationend",
                    OAnimation:"oAnimationEnd",
                    MozAnimation:"mozAnimationEnd",
                    WebkitAnimation:"webkitAnimationEnd"
                };
                for (c in b) if (void 0 !== a.style[c]) return b[c];
            }(document.createElement("div"));
            return this.addClass((b ? "" :"animated ") + a).one(d, function(d) {
                d.removeClass((b ? "" :"animated ") + a), "function" == typeof c && c();
            }), this;
        },
        animateCss:function(a, b) {
            return this.animateCSS(a, 0, b);
        },
        transform:function(a) {
            var b = "";
            return a.move && (b += "translate( " + a.move.x + "," + a.move.y + " )"), a.scale && (b += "scale(" + a.scale.x + "," + a.scale.y + ")"), 
            a.skew && (b += "skew(" + a.skew.x + "," + a.skew.y + ")"), a.rotate && (b += "rotate(" + a.rotate + ")"), 
            this.styles({
                transform:b
            }), this;
        },
        transformDefault:function() {},
        onBlur:function(a) {
            return this.css("filter", "blur(" + a + ")"), this;
        },
        noBlur:function() {
            return this.css("filter", "blur(0)").css("filter", "unset"), this;
        },
        loading:function() {
            return this.loadStatus = 1, this;
        },
        loaded:function() {
            return this.loadStatus = 0, this;
        },
        isLoad:function() {
            return this.loadStatus || 0;
        }
    },
    vm:function(a, b, c) {
        var d, e;
        if (c && VD[c]) return VD[c];
        d = {
            el:a,
            _vdom:1,
            selector:0,
            loadStatus:0,
            hash:c || Aps.dom.uuid()
        };
        for (e in Aps.dom.vf) d[e] = Aps.dom.vf[e];
        return d.id() || d.id(d.hash), d.selector = (b || "") + (d.id() ? "#" + d.id() :""), 
        d.hash && (window.VD || this.init(), VD[c] = d), c ? VD[c] :d;
    },
    vl:function(a, b) {
        var c = {
            _vlist:1,
            list:a,
            vdf:function(a) {
                var b = arguments;
                return this.list.forEach(function(c) {
                    c[a](b[1], b[2], b[3]);
                }), this || 0;
            },
            each:function(a) {
                "function" != typeof a && console.error("Invalid Inner function type:", typeof a), 
                this.list.forEach(function(b) {
                    a(b);
                });
            },
            on:function(a, b) {
                "function" != typeof b && console.error("Invalid Inner function type:", typeof b), 
                this.list.forEach(function(c) {
                    c.on(a, function() {
                        b(c);
                    });
                });
            },
            addClass:function(a) {
                return this.vdf("addClass", a);
            },
            removeClass:function(a) {
                return this.vdf("removeClass", a);
            },
            remove:function() {
                return this.vdf("remove");
            }
        };
        return b && (this.vdom[b] = c), b ? this.vdom[b] :c;
    },
    get:function(a, b) {
        var c;
        if ("object" == typeof a) {
            if (a.hash) return a;
            c = a, a = "";
        } else if ("string" == typeof a) {
            if (0 !== a.indexOf(".") * a.indexOf("#") && -1 == "a,abbr,address,area,article,aside,audio,b,base,big,blockquote,body,br,button,canvas,caption,code,col,colgroup,command,dd,div,dl,dt,em,embed,fieldset,footer,form,frame,frameset,h1,h2,h3,h4,h5,h6,head,header,hr,html,i,iframe,img,input,label,legend,li,link,map,mark,menu,menuitem,meta,nav,ol,optgroup,option,output,p,param,pre,progress,q,rp,script,section,select,small,source,span,strong,style,sub,summary,sup,table,tbody,td,textarea,tfoot,th,thead,time,title,tr,track,tt,ul,var,video,wbr".indexOf(a)) return Aps.dom.create(a, b);
            c = document.querySelector(a);
        }
        return c ? this.vm(c, a, b) :0;
    },
    list:function(a) {
        var c = [], d = document.querySelectorAll(a);
        return d.length > 0 && d.forEach(function(b) {
            c.push(Aps.dom.vm(b, a));
        }), d.length > 0 ? this.vl(c) :0;
    },
    "new":function(a, b) {
        new DOMParser();
        var d = this.parse(a);
        return this.vm(d, null, b);
    },
    create:function(a, b, c, d) {
        var e;
        return b = b || this.uuid(), c || d ? (e = document.createElement(a), this.vm(e, "#" + b, b).id(b).addClass(c).setAttr(d)) :this.vm(this.parse(a), "#" + b, b).id(b), 
        vdom[b];
    },
    parse:function(a) {
        var b = document.createElement("template");
        return b.innerHTML = a.trim(), b.content.firstChild;
    },
    style:function(a, b) {
        var c = a.indexOf(".") < 0 && a.indexOf("#") < 0 ? "." + a :a, d = function(a) {
            var b = "";
            for (let; k in a; ) b += k + " " + a[k] + " \n";
            return b;
        };
        return this.styles.el || (this.styles.el = document.createElement("style"), this.styles.el.type = "text/css", 
        this.styles.el.id = "ApsStyles", document.head.appendChild(this.styles.el)), b && (this.styles.css[c] = b, 
        vdom("#ApsStyles").html(d(this.styles.css))), a || b ? a :"";
    },
    storagehash:{
        I64BIT_TABLE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-".split(""),
        hash:function(a) {
            var d, e, b = 5381, c = a.length - 1;
            if ("string" == typeof a) for (;c > -1; c--) b += (b << 5) + a.charCodeAt(c); else for (;c > -1; c--) b += (b << 5) + a[c];
            d = 2147483647 & b, e = "";
            do e += Aps.dom.storagehash.I64BIT_TABLE[63 & d]; while (d >>= 4);
            return e;
        },
        valueSort:function(a, b) {
            var c = Object.keys(a).sort(function(c, d) {
                return b ? a[c] > b && a[c] - a[d] :a[c] - a[d];
            });
            return c;
        }
    },
    uuid:function() {
        var a = "g_" + new Date().getTime() + parseInt(1e3 * Math.random());
        return vdom("#" + a) ? this.uuid() :a;
    }
}, Aps.local = {
    set:function(a, b) {
        var c = typeof b, d = JSON.stringify({
            v:b,
            t:c
        });
        return localStorage.setItem(this.unikey(a), d), 1;
    },
    get:function(a) {
        var b = localStorage.getItem(this.unikey(a)) || 0, c = b ? JSON.parse(b).v :void 0;
        return c;
    },
    once:function(a) {
        return this.get(this.unikey(a)), this.remove(this.unikey(a)), res;
    },
    remove:function(a) {
        return localStorage.removeItem(this.unikey(a)), 1;
    },
    has:function(a) {
        return localStorage.getItem(this.unikey(a)) ? 1 :0;
    },
    removeAll:function(a) {
        var b, c;
        for (b = 0; b < a.length; b++) c = this.unikey(a[b]), localStorage.removeItem(c);
    },
    unikey:function(a) {
        return CONFIGS.appid ? CONFIGS.appid + "_" + a :a;
    }
}, Aps.io = {
    private_path:"undefined" != typeof plus ? plus.io.PRIVATE_DOC :null,
    public_path:"undefined" != typeof plus ? plus.io.PUBLIC_DOCUMENTS :null,
    public_downloads:"undefined" != typeof plus ? plus.io.PUBLIC_DOWNLOADS :null,
    "public":function() {},
    "private":function() {},
    downloads:function() {},
    toURL:function(a) {
        return plus.io.convertLocalFileSystemURL(a);
    },
    toFileURL:function(a) {
        return plus.io.convertAbsoluteFileSystem(a);
    }
}, Aps.cache = {
    init:function() {
        return this.max = 100, this.list = Aps.local.get("CACHELIST") || {}, this.collect = Aps.local.get("CACHECOLLECT") || {}, 
        this.count = this.list.length, this.time = Math.round(new Date().getTime() / 1e3), 
        this;
    },
    has:function(a) {
        return this.refresh(), "undefined" != typeof this.list[a] ? parseInt(this.list[a]) > this.time || this.remove(a) :this.remove(a);
    },
    add:function(a, b, c, d, e) {
        return d || (this.list[a] = c + Math.round(new Date().getTime() / 1e3)), e && this.addToCollect(a, e), 
        Aps.local.set("CACHELIST", this.list), Aps.local.set("CACHE_" + a, b), this.checkMax(), 
        this.refresh(), this;
    },
    get:function(a) {
        var b = Aps.local.get("CACHE_" + a);
        return b ? "undefined" != typeof b.status || "undefined" != typeof b.code ? b :0 :0;
    },
    update:function(a, b, c) {
        return this.add(a, b, c, 1), this;
    },
    remove:function(a) {
        return delete this.list[a], Aps.local.set("CACHELIST", this.list), Aps.local.remove("CACHE_" + a), 
        this.refresh(), 0;
    },
    removeAll:function(a) {
        for (var b = 0; b < a.length; b++) this.remove(a[b]);
        return Aps.local.set("CACHELIST", this.list), this.refresh(), this;
    },
    clear:function() {
        for (var a in this.list) Aps.local.remove("CACHE_" + this.list[a]);
        return Aps.local.remove("CACHELIST"), this.list = {}, this.refresh(), this;
    },
    addToCollect:function(a, b) {
        this.collect[b] ? this.collect[b][a] = 1 :(this.collect[b] = {}, this.collect[b][a] = 1), 
        Aps.local.set("CACHECOLLECT", this.collect);
    },
    clearCollect:function(a) {
        for (var b in this.collect[a]) this.remove(b);
        delete this.collect[a], Aps.local.set("CACHECOLLECT", this.collect);
    },
    clearExpired:function() {
        var a, b;
        this.refresh(), a = Math.round(new Date().getTime() / 1e3), b = Aps.dom.storagehash.valueSort(this.list, a), 
        this.removeAll(b);
    },
    refresh:function() {
        return this.time = Math.round(new Date().getTime() / 1e3), this.count = Object.keys(this.list).length, 
        this.list = Aps.local.get("CACHELIST") || {}, this;
    },
    checkMax:function() {
        if (this.refresh(), this.count >= this.max - this.max / 5) {
            var a = Aps.dom.storagehash.valueSort(this.list, 0);
            a = a.slice(0, parseInt(this.count / 5) - 1), this.removeAll(a);
        }
    }
}, Aps.worker = {}, Aps.cajax = {
    parseParam:function(a, b) {
        var e, f, c = "", d = typeof a;
        if ("string" == d || "number" == d || "boolean" == d) c += "&" + encodeURIComponent(b) + "=" + encodeURIComponent(a); else for (e in a) f = null == b ? e :b + "[" + e + "]", 
        c += "&" + this.parseParam(a[e], f);
        return c.substr(1);
    },
    socket:function() {},
    ajax:function(a, b) {
        var d, c = new XMLHttpRequest();
        if (c.open(b.requesttype, b.url, !b.useSync), b.headers) for (d in b.headers) c.setRequestHeader(d, b.headers[d]);
        "POST" == b.requesttype && c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), 
        c.withCredentials = !0, c.timeout = b.timeout || 2e3, c.onreadystatechange = function() {
            if (4 === c.readyState) if (200 == c.status) {
                var a = c.responseType || c.getResponseHeader("Content-Type");
                "function" == typeof b.callback && b.callback("json" == a || a.indexOf("json") > -1 ? JSON.parse(c.responseText) :c.responseText);
            } else console.error("Network Error. Server Code:", c.status, typeof b.errorCall, b.errorCall);
        }, c.send(b.parameters ? Aps.cajax.parseParam(b.parameters) :null);
    },
    getData:function(a) {
        return a.content || a.data;
    },
    getStatus:function(a) {
        return a.code || a.status || 0;
    },
    getMessage:function(a) {
        return a.message || a.msg;
    },
    successful:function(a) {
        return 0 == a.status || 200 == a.code;
    },
    request:function(a) {
        var d, e, g, h, i, j, k, l, p, q, r, s, t;
        a.mode || "ajax", CONFIGS.apimode || "AppSite", d = a.update || 0, e = a.url || 0, 
        a.headers || 0, g = a.parameters || 0, h = a.before || 0, i = a.callback || 0, j = a.errorCall || 0, 
        k = a.collect || 0, l = a.requesttype || "POST", a.loadingtype || "Window", a.useCORS || 0, 
        a.useSync || 0, p = a.expire || 0 === a.expire ? a.expire :3, q = {
            url:e,
            parameters:g,
            requesttype:l
        }, r = a.gajax || 0, s = Aps.dom.storagehash.hash(JSON.stringify(q)), Aps.cache = "undefined" == typeof Aps.cache.list ? Aps.cache.init() :Aps.cache.refresh(), 
        !Aps.cache.has(s) || d || r ? ("function" == typeof h && h(), a.callback = function(a, b) {
            Aps.cache.remove(s), !r && Aps.cache.add(s, a, p, d, k), "function" == typeof i && i(a, b);
        }, "function" == typeof i ? a.callback = function(a, b) {
            Aps.cache.remove(s), !r && Aps.cache.add(s, a, p, d, k), i(a, b);
        } :(Aps.cache.remove(s), !r && Aps.cache.add(s, t, p, d, k)), "function" == typeof j && (a.errorCall = function(a) {
            j(a);
        }), Aps.cajax.ajax(e, a)) :"function" == typeof i && (t = Aps.cache.get(s), "undefined" != typeof t.status || "200" == t.code ? i(Aps.cache.get(s), "200") :(a.update = 1, 
        Aps.cajax.request(a)));
    }
}, Aps.query = {
    params:null,
    parse:function() {
        if (this.params) return this.params;
        for (var a, b = /\+/g, c = /([^&=]+)=?([^&]*)/g, d = function(a) {
            return decodeURIComponent(a.replace(b, " "));
        }, e = window.location.search.substring(1), f = {}; a = c.exec(e); ) f[d(a[1])] = d(a[2]);
        return this.params = f, this.params;
    },
    toString:function() {
        var a, b, c;
        if (!this.params) return "";
        a = "", b = 0;
        for (c in this.params) a += (0 == b ? "?" :"&") + c + "=" + this.params[c], b++;
        return a;
    },
    set:function(a, b) {
        if (this.parse(), b) this.params[a] = b; else for (var c in a) this.params[c] = a[c];
        history.replaceState({}, CONFIGS.appname || "AppSite", location.origin + location.pathname + this.toString());
    },
    get:function(a) {
        return this.parse(), this.params[a] || null;
    },
    remove:function(a) {
        if (this.parse(), "string" == typeof a) delete this.params[a]; else for (var b in a) delete this.params[a[b]];
        history.replaceState({}, CONFIGS.appname || "AppSite", location.origin + location.pathname + this.toString());
    },
    clear:function() {
        history.replaceState({}, CONFIGS.appname || "AppSite", location.origin + location.pathname);
    },
    currentPage:function() {
        return location.pathname;
    },
    currentPageName:function(a) {
        var a = a || "mobile";
        return (location.origin + location.pathname).replace(CONFIGS.fronthost + a + "/", "").replace(".html", "");
    },
    isPage:function(a) {
        return location.pathname == CONFIGS.frontPath + a;
    }
}, Aps.setting = Aps.fn({
    visited:Aps.local.get("visited") || 0,
    version:Aps.local.get("version") || 0,
    device:Aps.local.get("device") || "html5",
    language:Aps.local.get("language") || ("undefined" != typeof plus ? {
        "zh-Hans-CN":"ZHCN",
        "zh-Hant-CN":"ZHCN"
    }[plus.os.language] || "EN" :"EN"),
    broswer:"",
    frontEnv:/mobile/i.test(location.href) ? "mobile" :"web",
    isMobile:/Android|webOS|iPhone|iPad|BlackBerry/i.test(navigator.userAgent),
    isWeixin:/MicroMessenger/i.test(window["navigator"]["userAgent"] || window["navigator"]["vendor"] || window["opera"]),
    visit:function() {
        Aps.setting.setProperty("visited", !0);
    },
    isVisited:function() {
        return Aps.setting.visited;
    },
    unvisit:function() {
        Aps.setting.visited = 0, Aps.local.remove("visited");
    },
    checkVersion:function() {},
    setUpdated:function() {
        Aps.local.get("update") && Aps.local.get("update") === CONFIGS.version || (Aps.cache.clear(), 
        Aps.local.set("update", CONFIGS.version));
    },
    setLanguage:function(a) {
        this.setProperty("language", a);
    },
    checkLocale:function() {
        return "undefined" != typeof plus && this.setProperty("language", locale[plus.os.language] || "EN"), 
        this.language;
    },
    checkVisit:function(a, b) {
        Aps.setting.isVisited() ? "function" == typeof a && a() :"function" == typeof b && b();
    }
}), Aps.mixer = {
    mix:function(a, b) {
        var c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t;
        b.LANG = Aps.setting.language, c = /\:\:([^\:\:]+)?\:\:/gi, d = /\[\[([^\]\]]+)?\]\]/gi, 
        e = a, f = this.getIfStruct(a), g = this.getNotStruct(a);
        for (h in f) i = f[h].match(c)[0].replace("::", "").replace("::", ""), i.indexOf("=") > 0 ? (j = i.split("="), 
        k = j[0], l = j[1], e = "undefined" == typeof b[k] || b[k] !== l ? e.replace("[if[" + f[h] + "]if]", "") :e.replace("[if[::" + i + "::", "").replace("]if]", "")) :e = "undefined" != typeof b[i] && "" !== b[i] && null !== b[i] && b[i] ? e.replace("[if[::" + i + "::", "").replace("]if]", "") :e.replace("[if[" + f[h] + "]if]", "");
        for (h in g) i = g[h].match(c)[0].replace("::", "").replace("::", ""), e = "undefined" != typeof b[i] && b[i] > 0 ? e.replace("[not[" + g[h] + "]not]", "") :e.replace("[not[::" + i + "::", "").replace("]not]", "");
        m = this.getStruct(a), n = this.getLoopStruct(a), o = this.flatData(b);
        for (h in m) p = "{{" + m[h] + "}}", e = this.replaceAll(e, p, o[m[h]] || 0 === o[m[h]] ? o[m[h]] :"");
        for (h in n) if (i = n[h].match(c)[0].replace("::", "").replace("::", ""), q = n[h].match(d), 
        r = "", "undefined" != typeof b[i]) {
            for (s = 0; s < b[i].length; s++) {
                "undefined" == typeof b[i][s] && null !== b[i] && (b[i][s].idx = s), r += n[h].replace("::" + i + "::", "");
                for (t in q) k = q[t].replace("[[", "").replace("]]", ""), r = b[i][s][k] || 0 == b[i][s][k] ? r.replace("[[" + k + "]]", b[i][s][k]) :r.replace("[[" + k + "]]", b[i][s]);
            }
            e = e.replace("{loop{" + n[h] + "}loop}", r || "");
        } else e = e.replace("{loop{::" + i + "::" + n[h] + "}loop}", "");
        return e;
    },
    loop:function(a, b) {
        var d, c = "";
        for (d in b) b[d]["loopIdx"] = this.getLoopIdx(d), b[d]["idx"] = d, c += this.mix(a, b[d]);
        return c;
    },
    getLoopIdx:function(a) {
        var b;
        return a = parseInt(a), b = "loopItem", b += 0 == (a + 1) % 2 ? " loop2th" :"", 
        b += 0 == (a + 1) % 3 ? " loop3th" :"", b += 0 == (a + 1) % 4 ? " loop4th" :"", 
        b += 0 == (a + 1) % 5 ? " loop5th" :"", b += 0 == (a + 1) % 6 ? " loop6th" :"", 
        b += 0 == (a + 1) % 8 ? " loop8th" :"", b += 0 == (a + 1) % 12 ? " loop12th" :"";
    },
    getStruct:function(a) {
        var d, b = /\{\{([^\}\}]+)?\}\}/g, c = a.match(b);
        if (c) for (d in c) c[d] = c[d].replace("{{", ""), c[d] = c[d].replace("}}", "");
        return c;
    },
    getLoopStruct:function(a) {
        var d, b = /\{loop\{([^\}\}]+)?\}loop\}/g, c = a.match(b);
        if (c) for (d in c) c[d] = c[d].replace("{loop{", ""), c[d] = c[d].replace("}loop}", "");
        return c;
    },
    getIfStruct:function(a) {
        var d, b = /\[if\[[^\]]*\]if\]/g, c = a.match(b);
        if (c) for (d in c) c[d] = c[d].replace("[if[", ""), c[d] = c[d].replace("]if]", "");
        return c;
    },
    getNotStruct:function(a) {
        var d, b = /\[not\[[^\]]*\]not\]/g, c = a.match(b);
        if (c) for (d in c) c[d] = c[d].replace("[not[", ""), c[d] = c[d].replace("]not]", "");
        return c;
    },
    flatData:function(a, b) {
        var e, f, g, h, i, c = {}, d = [];
        for (e in a) f = b ? b + "." + e :e, g = a[e], "object" == typeof a[e] ? d.push(this.flatData(a[e], f)) :c[f] = g;
        if (d.length > 0) for (h in d) for (i in d[h]) f = i, g = d[h][i], c[f] = g;
        return c;
    },
    replaceAll:function(res, FindText, RepText) {
        var preg = "/" + FindText + "/g";
        return res.replace(eval(preg), RepText);
    },
    setChildValue:function(a, b, c) {
        if ("string" != typeof b) return a;
        b.indexOf(".") <= 0 && (a[b] = c);
        var d = b.split(".");
        return d.length > 2 ? a[d[0]] = this.setChildValue(a[d[0]] || {}, b.replace(d[0] + ".", ""), c) :a[d[0]] ? a[d[0]][d[1]] = c :(a[d[0]] = {}, 
        a[d[0]][d[1]] = c), a;
    },
    conver:function() {}
}, ApsMd.core = {
    loading:{
        local:"<div class='ApsLocalLoading'><i class='ApsIcon I-load color-primary rotation'></i>" + i18n("LOADING") + "</div>",
        transptant:"<div class='loading transptant'><div class='logo rotation'><i class='ApsIcon I-load color-primary'></i></div></div>",
        global:"<div class='ApsGlobalLoading mask'><div class='logo rotation'><i class='ApsIcon I-load color-primary'></i></div>" + i18n("LOADING") + "</div>"
    },
    notice:{
        point:"<i class='ApsNotice'></i>"
    },
    toast:"<div class='ApsToast'><div class='ApsToast-message shadow'></div></div>",
    propup:"<div class='ApsPropup'><div class='ApsPropupSpace'></div><div class='ApsPropupMain shadow'><i class='ApsPropupClose ApsIcon I-error color-red normalshadow'></i><h4 class='page-media-title'></h4><div class='ApsPropupContent'><div class='row'><p></p></div><div class='pageMain'></div></div></div></div>",
    popup:"<div class='ApsPopup'><div class='view'><div class='title'>{{title}}</div><div class='contents'><p [if[::type=form::class='ApsPopupForm']if]>{{content}}</p></div><div class='buttons'>[if[::type=confirm::<a class='button cancel'>{{cancelText}}</a>]if]<a class='button ok'>{{okText}}</a></div></div></div>",
    menu:"<div class='ApsMenu'><div class='space'></div><div class='main'><h4 class='title'></h4><div class='menus'></div><div class='close'></div></div></div>",
    quickLogin:{
        full:"	<div class='ApsLogin'>		<div class='prop normalshadow'>		<div onclick='Aps.user.quickLoginClose();' class='closeBtn normalshadow'><i class='ApsIcon I-error color-red'></i></div>		<div class='ApsSwitch centerLayout'>		<div onclick='Aps.switcher.change(this);' class='ApsSwitchs current' tag='instant'>" + i18n("INSTANT") + "</div>		<div onclick='Aps.switcher.change(this);' class='ApsSwitchs' tag='regist'>" + i18n("REGIST") + "</div>		<div onclick='Aps.switcher.change(this);' class='ApsSwitchs' tag='login'>" + i18n("LOGIN") + "</div>		</div>		<div class='ApsSwitchMain current fadeInRight animated fast' tag='instant'>		<div class='form'>		[if[::mobileLogin::		<input class='input-text' type='tel' name='mobile' id='ApsMobile' placeholder='" + i18n("MOBILE") + "'>		<input class='input-text code' type='tel' name='verifyCode' id='ApsVerifyCode' placeholder='" + i18n("VERIFY_CODE") + "'>		<input type='button' onclick='Aps.user.requestMobileCode();' class='button bg-primary requestCode' name='requestCode' id='ApsRequestCode' value='" + i18n("SEND_CODE") + "'>		<button class='fullButton bg-primary color-white' onclick='Aps.user.mobileLogin();' >" + i18n("CONTINUE") + "</button>		]if]		[if[::emailLogin::		<input type='tel' class='input-text' name='email' id='ApsEmail' placeholder='Email Address' value=''>		<input type='tel' class='input-text code' placeholder='" + i18n("VERIFY_CODE") + "' name='verifycode' id='ApsEmailCode'>		<input type='button' onclick='Aps.user.requestEmailCode();' class='button bg-primary requestCode' name='requestCode' id='ApsRequestCode' value='" + i18n("SEND_CODE") + "'>		<button class='fullButton bg-primary color-white' onclick='Aps.user.emailLogin();' >" + i18n("CONTINUE") + "</button>		]if]		[if[::wechatLogin::<button class='fullLineButton color-green line-green' onclick='Aps.user.wechatLogin();' type='button'><i class='ApsIcon I-wechat'></i>" + i18n("LOGIN_WECHAT") + "</button>]if]		[if[::facebookLogin::<button class='fullLineButton color-blue line-blue' onclick='Aps.user.facebookLogin();' type='button'><i class='ApsIcon I-facebook'></i>" + i18n("LOGIN_FACEBOOK") + "</button>]if]		</div>		</div>		<div class='ApsSwitchMain fadeInRight animated fast' tag='regist'>		<div class='form regist'>		<div class='field require valid' fieldtype='input' length=64 fieldname='nickname' checktype='nickname'>		<input class='mainfield' type='text' name='nickname' placeholder='" + i18n("NICKNAME") + "'>		</div>		[if[::CURRENT_LANGUAGE=ZHCN::<div class='field require valid' fieldtype='input' length=32 fieldname='mobile' checktype='mobile'><input class='mainfield' type='text' name='mobile'  placeholder='" + i18n("MOBILE") + "'></div>]if]		[if[::CURRENT_LANGUAGE=EN::<div class='field require valid' fieldtype='input' length=64 fieldname='email' checktype='email'><input class='mainfield' type='text' name='email' placeholder='" + i18n("EMAIL_ADDRESS") + "'></div>]if]		<div class='field require valid' fieldtype='input' length=32 fieldname='password' checktype='password'>		<input class='mainfield' type='password' name='password' placeholder='" + i18n("PASSWORD") + "'>		</div>		<div class='field require valid' fieldtype='input' length=32 fieldname='confirmPassword' checktype='password'>		<input class='mainfield' type='password' name='confirmPassword' placeholder='" + i18n("REPASSWORD") + "'>		</div>		<button class='fullButton bg-primary color-white' onclick='Aps.user.regist();' type='button'>" + i18n("CONTINUE") + "</button>		</div>		</div>		<div class='ApsSwitchMain fadeInRight animated fast' tag='login'>		<div class='form login'>		<div class='field require valid' fieldtype='input' length='32' fieldname='account'>		<input class='mainfield' type='text' name='account' placeholder='" + i18n("LOGIN_ACCOUNT") + "'>		</div>		<div class='field require valid' fieldtype='input' length='32' fieldname='password' checktype='password'>		<input class='mainfield' type='password' name='password' placeholder='" + i18n("PASSWORD") + "'>		</div>		<button class='fullButton bg-primary color-white' onclick='Aps.user.passwordLogin();' type='button'>" + i18n("CONTINUE") + "</button>		</div>		</div>		</div>	</div>	",
        email:"	<div class='ApsLogin'>		<div class='prop normalshadow'>		<div onclick='Aps.user.quickLoginClose();' class='closeBtn normalshadow'><i class='ApsIcon I-error color-red'></i></div>		<div class='row'><input type='tel' class='input-text' name='email' id='ApsEmail' placeholder='Email Address' value='></div>		<div class='row'>		<input type='tel' class='input-text code' placeholder='Verify Code' name='verifycode' id='ApsEmailCode'>		<input type='button' onclick='Aps.user.requestEmailCode();' class='button bg-primary requestCode' name='requestCode' id='ApsRequestCode' value='Send Code'>		</div>		<div class='row'><input type='button' onclick='Aps.user.emailLogin();' class='button bg-primary disabled' name='login' id='ApsLogin' value='Sign In'></div>		[if[::wechatLogin::<button class='fullLineButton color-green line-green' onclick='Aps.user.wechatLogin();' type='button'><i class='ApsIcon I-wechat'></i> Sign In with Wechat</button>]if]		[if[::facebookLogin::<button class='fullLineButton color-blue line-blue' onclick='Aps.user.facebookLogin();' type='button'><i class='ApsIcon I-facebook'></i> Sign In with Facebook</button>]if]		</div>	</div>	",
        mobile:"	<div class='ApsLogin'>		<div class='prop normalshadow'>			<div onclick='Aps.user.quickLoginClose();' class='closeBtn normalshadow'><i class='ApsIcon I-error color-red'></i></div>			<div class='form'>				<input class='input-text' type='tel' name='mobile' id='ApsMobile' placeholder='Mobile'>				<input class='input-text code' type='tel' name='verifyCode' id='ApsVerifyCode' placeholder='Verify Code'>				<input type='button' onclick='Aps.user.requestMobileCode();' class='button bg-primary requestCode' name='requestCode' id='ApsRequestCode' value='Send Code'>				<button class='fullButton bg-primary color-white' onclick='Aps.user.mobileLogin();' type='button'>Contuinue</button>				[if[::wechatLogin::<button class='fullLineButton color-green line-green' onclick='Aps.user.wechatLogin();' type='button'><i class='ApsIcon I-wechat'></i> Sign In with Wechat</button>]if]				[if[::facebookLogin::<button class='fullLineButton color-blue line-blue' onclick='Aps.user.facebookLogin();' type='button'><i class='ApsIcon I-facebook'></i> Sign In with Facebook</button>]if]			</div>		</div>	</div>	",
        password:"	<div class='login'>		<div class='form login'>			<div class='field require valid' fieldtype='input' length='32' fieldname='account'>				<input class='mainfield' type='text' name='account' placeholder='Account'>			</div>			<div class='field require valid' fieldtype='input' length='32' fieldname='password' checktype='password'>				<input class='mainfield' type='password' name='password' placeholder='Password'>			</div>			<button class='fullButton bg-primary color-white' onclick='Aps.user.passwordLogin();' type='button'>Contuinue</button>			[if[::wechatLogin::<button class='fullLineButton color-green line-green' onclick='Aps.user.wechatLogin();' type='button'><i class='ApsIcon I-wechat'></i> Sign In with Wechat</button>]if]			[if[::facebookLogin::<button class='fullLineButton color-blue line-blue' onclick='Aps.user.facebookLogin();' type='button'><i class='ApsIcon I-facebook'></i> Sign In with Facebook</button>]if]			</div>		</div>	</div>	"
    },
    page:"[if[:cover:::<div class='pageCover'><img src='{{cover}}!cover'></div>]if]<div class='contents'>{{introduce}}</div>",
    view:"<div class='VIEW' id='{{viewid}}'></div>",
    cityPicker:"	<section id='areaLayer' class='express-area-box'>	<header><h3>选择地区</h3><a id='backUp' class='back' href='javascript:void(0)' title='返回'></a><a id='closeArea' class='close' href='javascript:void(0)' title='关闭'></a></header>	<article id='areaBox'><ul id='areaList' class='area-list'></ul></article>	</section>	<div id='areaMask' class='mask'></div>	",
    security:'	<div class="ApsPopup">	<div class="view security">		<div class="securityKey" onclick="SECURITY.press(this);" key="4"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="1"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="9"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="3"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="7"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="6"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="5"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="2"></div>		<div class="securityKey" onclick="SECURITY.press(this);" key="8"></div>				<div class="progress"><div class="bar bg-primary"></div></div>	</div>	</div>	'
}, Aps.gui = {
    icon:{
        info:"<i class='ApsIcon color-blue I-messege'></i> ",
        loading:"<i class='ApsIcon color-blue I-loading rotation'></i> ",
        warning:"<i class='ApsIcon color-orange I-warning'></i> ",
        success:"<i class='ApsIcon color-green I-success'></i> ",
        failed:"<i class='ApsIcon color-red I-error'></i> "
    },
    animateOn:CONFIGS.animatecss || 1,
    toucheEvt:0,
    smoothing:function(a, b) {
        var d, e, f, g, h, i, j, m;
        if (a._vlist) for (d = 0; d < a.list.length; d++) Aps.gui.smoothing(a.list[d], b); else e = function(a) {
            var b = a.match(/translate([^\)]+)?/gi)[0].replace("translate(", "").split(",");
            return {
                x:parseInt(b[0].replace("px", "")),
                y:parseInt(b[1].replace("px", ""))
            };
        }, b = b || {
            blur:1,
            lockX:0,
            lockY:0,
            backup:1,
            ending:0
        }, f = b.lockX || 0, g = b.lockY || 0, h = b.backup || 0, i = b.ending || 0, j = b.scale || 0, 
        b.rotate || 0, b.skew || 0, m = b.blur || 0, a.onTouch("start", function(a) {
            if (a.css("transform")) {
                var b = e(a.css("transform"));
                a.tData.transX = b.x, a.tData.transY = b.y;
            }
        }), a.onTouch("move", function(a) {
            var c, b = {};
            b.move = {
                x:f ? "0px" :a.tData.x - a.tData.X_ + (a.tData.transX || 0) + "px",
                y:g ? "0px" :a.tData.y - a.tData.Y_ + (a.tData.transY || 0) + "px"
            }, j && (c = Math.pow((Math.abs(a.tData.x - a.tData.X_ + (a.tData.transX || 0)) + Math.abs(a.tData.y - a.tData.Y_ + (a.tData.transY || 0))) / 10, .25) * j, 
            b.scale = {
                x:c,
                y:c
            }), a.transform(b), m && a.onBlur((Math.abs(a.tData.distanceX) + Math.abs(a.tData.distanceY)) * m / 75 + "px");
        }), a.onTouch("right", function(a) {
            a.styles({
                transition:"all 0.2s ease-out 0ms",
                filter:"blur(0px)",
                transform:"translate(0px,0px)"
            });
        }), a.onTouch("left", function(a) {
            i && a.styles({
                transition:"all 0.2s ease-out 0ms",
                filter:"blur(0px)",
                transform:"translate(" + i.x + "," + i.y + ")"
            });
        }), a.onTouch("end", function(a) {
            h && !i && setTimeout(function() {
                a.styles({
                    transition:"",
                    filter:"",
                    transform:""
                });
            }, 300);
        });
    },
    dragging:function() {},
    localLoad:{
        start:function(a, b) {
            var c = VD(ApsMd.core.loading.local);
            return c.animate(ApsMd.animate.fadeInDown), b ? vdom(a || ".app").loading().append(c) :vdom(a || ".app").loading().prepend(c);
        },
        success:function(a, b, c) {
            var d = vdom(a || ".app").loaded().find(".ApsLocalLoading:not(.removing)").html(Aps.gui.icon.success + (b || i18n("LOADING_SUC"))).addClass("removing");
            setTimeout(function() {
                d.animateCss("pullOutUp fastest", function() {
                    d.remove();
                });
            }, c || 1e3);
        },
        failed:function(a, b, c) {
            var d = vdom(a || ".app").loaded().find(".ApsLocalLoading:not(.removing)").html(Aps.gui.icon.failed + (b || i18n("LOADING_FAL"))).addClass("removing");
            setTimeout(function() {
                d.animateCss("fadeOut faster", function() {
                    d.remove();
                });
            }, c || 2500);
        },
        cancel:function(a) {
            var b = vdom(a || ".app").loaded().find(".ApsLocalLoading:not(.removing)").addClass("removing");
            b.animateCss("pullOutUp fastest", function() {
                b.remove();
            });
        }
    },
    globalLoad:{
        start:function(a) {
            return VD("html", "HTML").isLoad() ? (Aps.gui.toast(i18n("LOADING")), void 0) :(VD(ApsMd.core.loading.global, "G_LOADING").html(Aps.gui.icon.loading + a || i18n("LOADING")), 
            VD("html", "HTML").loading().append(VD.G_LOADING), void 0);
        },
        success:function(a, b) {
            VD("html", "HTML").loaded(), VD.G_LOADING.html(Aps.gui.icon.success + (a || i18n("SUCCESS"))), 
            setTimeout(function() {
                VD.G_LOADING.fadeOut();
            }, b || 1500);
        },
        failed:function(a, b) {
            VD("html", "HTML").loaded(), VD.G_LOADING.html(Aps.gui.icon.failed + (a || i18n("FAILED"))), 
            setTimeout(function() {
                VD.G_LOADING.fadeOut();
            }, b || 2500);
        },
        cancel:function() {
            VD("html", "HTML").loaded(), VD.G_LOADING.fadeOut();
        }
    },
    errorFocus:function(a) {
        this.animateOn ? vdom(a).animateCss("errorFocus slow") :vdom(a).addClass("errorFocus"), 
        vdom(a).focus();
    },
    toast:function(a, b, c) {
        var d = VD(ApsMd.core.toast);
        vdom("body").append(d), d.find(".ApsToast-message").html(Aps.gui.icon[b || "info"] + (a || i18n("ERROR"))), 
        d.fadeIn(), setTimeout(function() {
            d.fadeOut();
        }, c || 3e3);
    },
    submiting:function(a, b) {
        var c = VD(ApsMd.core.toast);
        vdom("body").append(c), c.find(".ApsToast-message").html(Aps.gui.icon[b || "loading"] + (a || i18n("SUBMITING"))), 
        Aps.gui.animateOn ? c.animateCss("fadeInDown faster") :c.fadeIn();
    },
    submitProgress:function(a, b) {
        if (!vdom(".ApsToast")) {
            var c = VD(ApsMd.core.toast);
            vdom("body").append(c), vdom(".ApsToast").find(".ApsToast-message").html(Aps.gui.icon[status || "loading"] + (a || "提交中..."));
        }
        vdom(".progress") || vdom(".ApsToast").append("<div class='progress'><div class='progressBar bg-primary'></div></div>"), 
        vdom(".progress .progressBar").attr("style", "width:" + b + "%;");
    },
    submited:function(a, b, c) {
        vlist(".ApsToast").remove();
        var d = VD(ApsMd.core.toast);
        vdom("body").append(d), d.find(".ApsToast-message").html(Aps.gui.icon[b || "success"] + (a || i18n("success" == b ? "SUBMIT_SUC" :"SUBMIT_FAL"))), 
        setTimeout(function() {
            Aps.gui.animateOn ? d.animateCss("fadeOutUp faster", function() {
                d.remove();
            }) :d.remove();
        }, c ? 2500 :1500);
    },
    cityPicker:function() {
        var a = ApsMd.core.cityPicker;
        vdom("body").append(a);
    },
    popup:function(a, b, c, d) {
        var g, h, i, j, k, l, m, n, o, e = "function" == typeof d ? {} :d || {}, f = {};
        f.title = a || 0, f.type = c || "alert", f.okText = e.okTxt || i18n("OK"), f.cancelText = e.cancelTxt || i18n("CANCEL"), 
        g = e.onOk || ("function" == typeof d ? d :0), h = e.onCancel || 0, i = VD(Aps.mixer.mix(ApsMd.core.popup, f)), 
        vdom("body").append(i), i.find(".contents").html(b || ""), j = i.find(".view"), 
        k = i.find(".button.ok"), l = i.find(".button.cancel"), Aps.gui.animateOn ? j.animateCss("pulseIn faster") :i.fadeIn(), 
        m = function() {
            Aps.gui.animateOn ? (j.animateCss("pulseOut fast"), i.fadeOut()) :i.fadeOut();
        }, n = function() {
            g ? g && (g(), m()) :m();
        }, o = function() {
            (!h || h()) && m();
        }, k && k.click(n), l && l.click(o);
    },
    alert:function(a, b, c) {
        this.popup(a, b, "alert", c);
    },
    confirm:function(a, b, c) {
        this.popup(a, b, "confirm", c);
    },
    form:function(a, b, c) {
        this.popup(a, b, "form", c);
    },
    onBlur:function(a) {
        var b = VD(a);
        b = b.hasClass("noBlur m") ? b.toggleClass("onBlur").toggleClass("noBlur") :b.addClass("onBlur m");
    },
    noBlur:function(a) {
        var b = VD(a);
        b = b.removeClass("onBlur").removeClass("noBlur");
    },
    propup:function(a, b) {
        var d, e, f, g, h, i, c = VD(ApsMd.core.propup);
        VD("html", "HTML").append(c), d = c.find(".ApsPropupMain h4"), e = c.find(".ApsPropupSpace"), 
        f = c.find(".ApsPropupMain"), g = c.find(".ApsPropupClose"), h = c.find(".ApsPropupMain .ApsPropupContent .row p"), 
        d.html(a), h.html(b), Aps.gui.animateOn ? (c.show(), e.fadeIn(), f.animate(ApsMd.animate.popIn, 300)) :c.fadeIn(), 
        Aps.gui.onBlur("#VIEW"), i = function() {
            Aps.gui.animateOn ? (f.animate(ApsMd.animate.popOut, 300, function() {
                c.remove();
            }), e.fadeOut()) :c.fadeOut(), Aps.gui.noBlur("#VIEW");
        }, e.click(i), g.click(i);
    },
    menu:function(a, b, c, d) {
        var f, g, h, i, j, k, l, e = VD(ApsMd.core.menu);
        VD("html", "HTML").append(e), f = e.find("h4"), g = e.find(".space"), h = e.find(".main"), 
        i = e.find(".close").text(c || "取消 Cancel"), j = e.find(".menus"), f.html(a), j.html(Aps.mixer.loop("<button>{{title}}</button>", b)), 
        k = j.finds("button"), l = function() {
            h.animate(ApsMd.animate.slideOutBottom, 300, function() {
                e.remove();
            }), g.fadeOut(), "function" == typeof d && d();
        }, k.on("click", function(a) {
            var c = a.index();
            "function" == typeof b[c].call && b[a.index()].call(a, a.index()), l();
        }), e.show(), g.fadeIn().on("click", l), h.animate(ApsMd.animate.slideInBottom, 300), 
        i.on("click", l);
    },
    stretch:function(a, b) {
        var c = VD(a), d = VD(b);
        c.toggleClass("closed"), d.find("span span") && d.find("span span").text(c.hasClass("closed") ? "展开" :"收起"), 
        d.find(".ApsIcon").toggleClass("I-bottom").toggleClass("I-top");
    }
}, Aps.router = Aps.fn({
    params:0,
    mode:"general",
    i18n:CONFIGS.i18n || 0,
    setMode:function(a) {
        this.mode = a;
    },
    open:function(a) {
        "undefined" != typeof mui ? mui.openWindow({
            url:i18n && Aps.router.i18n ? a.indexOf("/") < 2 && a.indexOf("./") >= 0 ? a.replace("/", "/" + Aps.setting.language + "_") :Aps.setting.language + "_" + a :a,
            id:a,
            styles:{
                popGesture:"close"
            },
            show:{
                duration:300
            }
        }) :location.href = i18n && Aps.router.i18n ? a.indexOf("/") < 2 && a.indexOf("./") >= 0 ? a.replace("/", "/" + Aps.setting.language + "_") :Aps.setting.language + "_" + a :a;
    },
    then:function(a, b) {
        "function" == typeof a && a(b);
    },
    init:function(a, b, c) {
        var d = "v_" + new Date().getTime();
        this.params = b || {}, this.params.viewid = d, this.params.LANG = Aps.setting.language, 
        this.get(a, function(a) {
            Aps.router.initCall(a).then(c);
        }, b, {
            gajax:1
        });
    },
    initCall:function(a) {
        var b, c;
        return vlist(".targetView") && vlist(".targetView").remove(), b = Aps.router.params || {}, 
        c = b.viewid || "view", VD(Aps.mixer.mix(ApsMd.core.view, b), c).addClass("targetView"), 
        vdom("body").append(vdom[c].html(Aps.mixer.mix(a, b))), this;
    },
    "switch":function(a, b) {
        location.href = -1 == b ? a :b && Aps.router.i18n ? a.indexOf("/") < 2 && a.indexOf("./") >= 0 ? a.replace("/", "/" + Aps.setting.language + "_") :Aps.setting.language + "_" + a :a;
    },
    back:function(a, b) {
        var a = a || -1;
        setTimeout(function() {
            history.go(a);
        }, b);
    },
    view:function(a, b, c) {
        var d = "v_" + new Date().getTime();
        this.params = b || {}, this.params.viewid = d, "object" == typeof a || a.url ? this.get(a.url, {
            success:function(a) {
                Aps.router.viewCall(a).then(c, a);
            },
            error:function(a) {
                Aps.gui.toast("Network Error:" + a);
            }
        }, b, {
            expire:0
        }) :(VD(Aps.mixer.mix(ApsMd.core.view, this.params), d), VD("html", "HTML").append(VD[d].html(Aps.mixer.mix(a, this.params))), 
        VD[d].animate(ApsMd.animate.slideInRight, 250));
    },
    viewCall:function(a) {
        var b = Aps.router.params || {}, c = b.viewid || "view", d = VD(Aps.mixer.mix(ApsMd.core.view, b), c);
        return VD("html", "HTML").append(d.html(Aps.mixer.mix(a, b))), d.animate(ApsMd.animate.slideInRight, 250), 
        this;
    },
    closeView:function(a, b) {
        "function" == typeof then && b(), VD[a || "view"].animate(ApsMd.animate.slideOutRight, 200), 
        setTimeout(function() {
            VD[a || "view"].remove();
        }, 200);
    },
    newWindow:function(a, b, c, d) {
        var e, f, g, h, i, j, k, l, m, n;
        c = c || {}, e = c.width || 375, f = c.height || 667, g = c.top || (window.screen.availHeight - 30 - f) / 2, 
        h = c.left || (window.screen.availWidth - 10 - e) / 2, i = c.origin || "*", j = window.open(a, "_blank", "height=" + f + ", width=" + e + ", top=" + g + ", left=" + h + ", menubar=no,location=no,resizable=no,scrollbars=yes,status=no"), 
        k = 0, l = setInterval(function() {
            j.postMessage("hello", i), k > 19 && clearInterval(l), k++;
        }, 500), m = function() {
            clearInterval(l), j.postMessage(b, i);
        }, n = function(a) {
            "ok" == a.data && (clearInterval(l), m()), "function" == typeof d && d(a);
        }, window.addEventListener("message", n, i);
    },
    close:function(a) {
        var a = a || 0;
        setTimeout(function() {
            "undefined" != typeof mui ? (mui.back(), mui.targets.action = !1) :Aps.router.back();
        }, a);
    },
    reload:function() {
        location.reload();
    }
}), Aps.queue = {
    list:[],
    nlist:{},
    len:0,
    cur:0,
    params:0,
    init:function(a, b, c) {
        var e, d = this || Aps.queue;
        if (c = c || 0, d.params = b || 0, "string" == typeof a) d.in(a, c), d.run(); else if ("object" == typeof a) {
            for (e in a) d.in(a[e], none);
            d.run();
        } else console.error("Unvalid list"), console.log("String for single Function, eg: Aps.queue.init('Aps.swip.init');"), 
        console.log("Object for Functions, eg: Aps.queue.init(['Aps.swip.init','Aps.switcher.init']);");
    },
    "in":function(a) {
        this.len++, this.list.push(a);
    },
    out:function() {
        this.cur++, this.len--, this.list.splice(1);
    },
    run:function() {
        0 != this.list.length && (this.params = this.list[0](this.params) || 0);
    },
    next:function() {},
    skip:function() {
        this.out();
    },
    skipTo:function() {
        this.stop();
    },
    stop:function() {}
}, Aps.metting = {
    timeInterval:1e3,
    private_requests:{},
    private_messages:{},
    public_requests:{},
    public_messages:{},
    INTERVAL:0,
    init:function(a) {
        this.privateId = a, this.INTERVAL = setInterval(function() {
            Aps.metting.progress(a);
        }, this.timeInterval);
    },
    progress:function(a) {
        this.private_requests = Aps.local.get(a + "_requests"), this.private_requests && this.accept(this.private_requests);
    },
    run:function(event) {
        console.log(typeof event, event), eval(event);
    },
    accept:function(a, b) {
        for (var c = 0; c < a.length; c++) this.run(a[c]);
        this.done(b);
    },
    done:function(a) {
        var a = a || this.privateId;
        Aps.local.set(a + "_requests", 0);
    },
    request:function(a, b) {
        var c = Aps.local.get(a + "_requests") || [];
        c.push(b), Aps.local.set(a + "_requests", c);
    },
    exit:function() {
        clearInterval(Aps.metting.INTERVAL);
    }
}, Aps.filters = {
    action:0,
    params:Aps.local.get("filterParams") || {},
    options:Aps.local.get("filterOptions") || {},
    selectFilter:function(a) {
        var b = VD(a);
        b.siblings().removeClass("current"), b.addClass("current"), this.setParams(b.attr("filters")), 
        Aps.scrollView.refresh();
    },
    setParams:function(a) {
        var b;
        a = "string" == typeof a ? this.parse(a) :a;
        for (b in a) this.params[b] = a[b];
    },
    setAction:function(a) {
        this.action = a || "activeList";
    },
    removeParams:function(a) {
        delete this.params[a];
    },
    setOptions:function(a) {
        var b;
        a = "string" == typeof a ? this.parse(a) :a;
        for (b in a) this.options[b] = a[b];
    },
    parse:function(a) {
        var d, e, b = a.split(","), c = {};
        for (d in b) e = b[d].split(":"), c[e[0]] = /^[0-9]+$/.test(e[1]) ? parseInt(e[1]) :e[1];
        return c;
    },
    clearParams:function() {
        if (this.params.time) var a = this.params.time;
        this.params = {
            time:a
        };
    },
    resetOptions:function() {
        this.options = {};
    }
}, Aps.switcher = Aps.fn({
    size:CONFIGS.listSize || 6,
    originTop:0,
    init:function(a, b, c) {
        var d, e, f;
        a = a || ".ApsSwitch", b = b || "window", c = c || 0, d = VD(a), d && (e = d.find(".container"), 
        e && (d.offsetTop = d.parent().property("offsetTop"), d.originTop = d.property("offsetTop"), 
        d.wrapperH = d.find(".wrapper").property("clientHeight"), d.finds(".switchs").on("click", function(a) {
            Aps.switcher.change(d, a);
        }), d.find(".dropButton") && d.find(".dropButton").on("click", function(a) {
            a.parent().addClass("dropDown"), a.parent().css("scrollX", 0);
        }), d.find(".switchs.current") || d.find(".switchs").addClass("current"), d.find(".mains.current") || d.find(".mains").addClass("current"), 
        c || (f = VD(b), f.on("scroll", function() {
            var a = f.property("scrollY") || f.property("scrollTop") || 0;
            a >= d.originTop + 1 ? (d.addClass("float").find(".wrapper").css("top", d.offsetTop + "px"), 
            e.css("margin-top", d.wrapperH + "px")) :(d.removeClass("float").css("top", "0px"), 
            e.css("margin-top", "0"));
        }))));
    },
    change:function(a, b) {
        var c = b.attr("tag"), d = b.index();
        a.removeClass("dropDown"), a.currentTag = c, Aps.switcher.swipeTo(a, d), a.finds(".switchs").each(function(a) {
            c && a.attr("tag") === c ? a.addClass("current") :a.removeClass("current");
        }), a.finds(".mains").each(function(b) {
            var d, e, g, h, i, j, k;
            if (b.attr("tag") == a.currentTag) {
                if (b.addClass("current"), b.hasClass("inited")) return;
                b.attr("tag") || 0, d = b.attr("target") || 0, e = b.attr("call") || 0, b.attr("append") || 0, 
                g = b.attr("inited") || 0, h = parseInt(b.attr("page")) || 1, i = parseInt(b.attr("size")) || 10, 
                j = b.attr("filters") || 0, k = b.attr("options") || 0, Aps.filters.clearParams(), 
                Aps.filters.setParams({
                    page:h,
                    size:i
                }), j && Aps.filters.setParams(j), k && Aps.filters.setOptions(k), e && !g && (b.attr("inited", 1), 
                Aps.switcher.post(d, Aps.contents[e], Aps.filters.params, Aps.filters.options));
            } else b.removeClass("current");
        });
    },
    swipeTo:function(a, b) {
        var c = a.finds(".switchs"), d = c.list[b];
        b > 2 ? a.css("scrollLeft", d.property("offsetLeft") - c[2].property("offsetLeft")) :a.css("scrollLeft", 0);
    },
    refreshTags:function(a) {
        var c, d, e, b = VD(a);
        b && (c = VD(a + " .ApsSwitchWapper"), d = c.attr("target"), e = c.attr("filters") || 0, 
        this.post(d, this.refreshTagsCall, e ? this.setParams(Aps.filters.parse(e)) :null));
    },
    refreshTagsCall:function(a) {
        a && (VD(".ApsSwitchMain").remove(), VD(".ApsSwitchWapper").html(Aps.switcher.generateTags(Aps.cajax.getData(a))), 
        VD(".content.container").append(Aps.switcher.generateSwithMain(Aps.cajax.getData(a))), 
        Aps.switcher.setTagDict(Aps.cajax.getData(a)), Aps.scrollView.init());
    },
    setTagDict:function(a) {
        var c, b = {};
        for (c in a) b[a[c].id] = a[c].name;
        Aps.local.set("tagDict", b);
    },
    generateTags:function(a) {
        var c, b = "";
        for (c in a) b += '<div onclick="Aps.switcher.change(this);" tag="tag' + a[c].id + '" class="ApsSwitchs ' + (c > 0 ? "" :"current") + '">' + a[c].name + "</div>";
        return b;
    },
    generateSwithMain:function(a) {
        var h, b = VD(".ApsSwitchWapper"), c = b.attr("api"), d = b.attr("call"), e = b.attr("append"), f = b.attr("filters") || 0, g = "";
        for (h in a) g += '<div tag="tag' + a[h].id + '" class="ApsSwitchMain ApsScrollView ' + (h > 0 ? "" :"current") + '" ' + 'target="' + c + '" ' + 'size="' + Aps.switcher.size + '" ' + 'call="' + d + '" ' + 'append="' + e + '" ' + 'filters="' + (f ? f + "," :"") + "type:" + a[h].id + '"' + ">" + ApsMd.core.loading.local + "</div>";
        return g;
    }
}), Aps.scrollView = Aps.fn({
    last:0,
    loading:0,
    isLoading:function(a) {
        return a ? !!Aps.scrollView["loading_" + a] :!!Aps.scrollView.loading;
    },
    startLoading:function(a) {
        Aps.scrollView[a ? "loading_" + a :"loading"] = 1;
    },
    endLoading:function(a) {
        Aps.scrollView[a ? "loading_" + a :"loading"] = 0;
    },
    refresh:function(a, b, c) {
        var d, f, g, j, k, m, n;
        a = a || ".ApsScrollView", VD(a) && (b = b || 0, c = c || 0, d = VD(a + ".current"), 
        d.removeAttr("inited"), d.attr("tag") || 0, f = d.attr("target") || 0, g = d.attr("call") || 0, 
        d.attr("append") || 0, d.attr("inited") || 0, j = 1, k = parseInt(d.attr("size")) || 10, 
        parseInt(d.attr("max")) || 10, m = d.attr("filters") || 0, n = d.attr("options") || 0, 
        Aps.filters.setParams({
            page:j,
            size:k
        }), m && Aps.filters.setParams(m), n && (Aps.filters.setOptions(n), b && (Aps.filters.options.update = 1)), 
        Aps.gui.localLoad.start(a, 1), Aps.scrollView.startLoading(), Aps.scrollView.post(f, c ? null :Aps.contents[g], Aps.filters.params, Aps.filters.options));
    },
    init:function(a) {
        var b, d;
        Aps.scrollView.refresh(a), a = a || ".ApsScrollView", VD(a) && (b = VD(a + ".current") || VD(a), 
        document.documentElement, d = window.innerHeight, window.onscroll = null, window.onscroll = function() {
            var c = window.scrollY;
            return Aps.scrollView.isLoading() || c < Aps.scrollView.last || b.hasClass("loaded") ? (Aps.scrollView.last = c, 
            void 0) :(c + d + 10 >= document.documentElement.scrollHeight && c > 50 && (Aps.scrollView.startLoading(a), 
            Aps.scrollView.next(a)), void 0);
        });
    },
    next:function(a) {
        var b, d, f, h, i, j, k, l;
        a = a || ".ApsScrollView", VD(a) && (b = VD(a + ".current") || VD(a), b.attr("tag") || 0, 
        d = b.attr("target") || 0, b.attr("call") || 0, f = b.attr("append") || 0, b.attr("inited") || 0, 
        h = b.attr("filters") || 0, i = b.attr("options") || 0, j = parseInt(b.attr("page")) || 1, 
        k = parseInt(b.attr("size")) || 10, l = parseInt(b.attr("max")) || 10, Aps.filters.setParams({
            page:j + 1,
            size:k
        }), h && Aps.filters.setParams(h), i && Aps.filters.setOptions(i), l > j ? (Aps.gui.localLoad.start(a, 1), 
        Aps.scrollView.post(d, Aps.contents[f], Aps.filters.params, Aps.filters.options)) :(b.addClass("loaded"), 
        Aps.gui.toast(i18n("LOADED_ALL"))));
    }
}), Aps.checker = {
    checkUser:function() {
        Aps.query.get("userid") && Aps.query.get("token") && Aps.query.get("expire") && (Aps.user.setProperty("userid", Aps.query.get("userid")), 
        Aps.user.setProperty("token", Aps.query.get("token")), Aps.user.setProperty("tokenexpire", Aps.query.get("expire")), 
        Aps.user.init(), Aps.query.remove([ "userid", "token", "expire" ]), Aps.router.open(location.origin + location.pathname + Aps.query.toString(), "new"));
    },
    checkOpenId:function() {
        Aps.query.get("wxOpenid") && (Aps.user.setProperty("openid", Aps.query.get("wxOpenid")), 
        Aps.user.init(), Aps.query.remove([ "wxOpenid" ]));
    },
    checkPromoter:function() {
        Aps.query.get("promoterid") && Aps.query.get("promoteduration") && (Aps.promotion.setProperty("promoterid", Aps.query.get("promoterid")), 
        Aps.promotion.setProperty("promoteexpire", parseInt(new Date().getTime() / 1e3) + parseInt(Aps.query.get("promoteduration"))), 
        Aps.promotion.init(), Aps.query.remove([ "promoterid", "promoteduration" ]));
    },
    checkBroswer:function() {
        var a = window["navigator"]["userAgent"] || window["navigator"]["vendor"] || window["opera"], b = "html5";
        /iPhone|iPod|iPad/.test(a) && (b = "ios"), /MicroMessenger/i.test(a) && (b = "wx"), 
        /Silk|BlackBerry|Opera Mini|IEMobile/.test(a) && (b = "other"), (navigator.userAgent.match(/MSIE/i) || navigator.userAgent.match(/Trident.*rv:11\./)) && (b = "ie"), 
        Aps.setting.broswer = b, VD("body").addClass(b);
    },
    checkDevice:function() {
        Aps.setting.isMobile ? "web" == Aps.setting.frontEnv && window.outerWidth < 720 && (location.href = location.href.replace("/web/", "/mobile/")) :"web" == Aps.setting.frontEnv && window.outerWidth < 640 && (location.href = location.href.replace("/web/", "/mobile/"));
    },
    checkHeaderUserCenter:function() {
        if (Aps.user.islogin()) {
            var a = document.querySelector(".userCenter");
            a && (a.innerHTML = '<div onclick="Aps.router.switch(\'personal.html\');" class="white smallButtons bg-primary">个人中心</div><div onclick="Aps.user.logout();" class="white smallButtons bg-lightgray">退出登录</div>');
        }
    },
    checkHeaderNav:function() {
        if (null !== document.querySelector(".headerNav")) {
            var a = Aps.query.currentPageName("web");
            document.querySelectorAll(".headerNav .content li").forEach(function(b) {
                b.getAttribute("page") == a && b.classList.add("focus");
            });
        }
    },
    checkBarTab:function() {
        if (VD(".bar")) {
            var a = Aps.query.currentPageName("web");
            VL(".bar ul li").each(function(b) {
                b.attr("page") == a && b.addClass("current");
            });
        }
    },
    checkPcUser:function() {
        if (Aps.local.get("personalInfo")) {
            var a = Aps.local.get("personalInfo");
            VD(".bar .avatar img").attr("src", a.head), VD(".bar h5").text(a.nickname);
        }
    },
    checkTabbar:function() {
        if (VD(".tabBar")) {
            var a = Aps.query.currentPageName("mobile");
            VL(".tabBar a li").each(function(b) {
                if (b.attr("page") == a) {
                    var c = b.find("img");
                    b.addClass("current"), c.attr("src", c.attr("src").replace(".png", "Focus.png"));
                }
            });
        }
    }
}, Aps.counter = {
    plusBtn:0,
    negatBtn:0,
    input:0,
    max:1,
    min:1,
    current:1,
    init:function() {
        this.input = VD("#ApsCounterInput"), this.plusBtn = VD("#ApsCounterPlus"), this.negatBtn = VD("#ApsCounterNegative"), 
        this.current = parseInt(this.input.val()) || 1, this.max = parseInt(this.input.attr("max")) || 1, 
        this.min = parseInt(this.input.attr("min")) || 1, this.check();
    },
    plus:function() {
        this.current >= this.max || (this.current += 1, this.input.val(this.current), this.check());
    },
    negative:function() {
        this.current <= this.min || (this.current -= 1, this.input.val(this.current), this.check());
    },
    check:function() {
        this.current > this.min ? this.negatBtn.removeClass("disabled") :this.negatBtn.addClass("disabled"), 
        this.current < this.max ? this.plusBtn.removeClass("disabled") :this.plusBtn.addClass("disabled");
    },
    countdown:function(a, b) {
        var d, e, c = VD("#" + a).value();
        VD("#" + a).addClass("waited").attr("disabled", "disabled"), d = b, e = setInterval(function() {
            0 == d ? (clearInterval(e), vd("#" + a).removeClass("waited").removeAttr("disabled").value(c)) :(vd("#" + a).value(d), 
            --d);
        }, 1e3);
    }
}, Aps.converter = {
    lang:CONFIGS.lang || "ZHCN",
    setLang:function(a) {
        this.lang = a;
    },
    translate:function(a) {
        return ApsMd.locate[this.lang][a];
    },
    exchange:function(a, b) {
        return ApsMd.dict[a][b];
    }
}, Aps.record = Aps.fn({
    click:function(a, b) {
        this.submit(a, b, "click");
    },
    play:function(a, b) {
        this.submit(a, b, "play");
    },
    view:function(a, b) {
        this.submit(a, b, "view");
    },
    display:function(a, b) {
        this.submit(a, b, "display");
    },
    submit:function(a, b, c, d) {
        this.resetOptions(), this.setAction(c || "click"), this.setParams({
            itemtype:a,
            itemid:b,
            userid:Aps.user.userid || "guest"
        }), d && this.setCallback(d), Aps.cajax.request(this.options);
    }
}), Aps.former = Aps.fn({
    form:{},
    generateForm:function(a) {
        var c, b = a.name || "unNameForm";
        Aps.dom.create("div", b, [ "setting", "form" ]);
        for (c in a) "name" !== c && vdom[b].append(Aps.former.generateField(a[c]));
        return vdom[b];
    },
    generateField:function(a) {
        var n, o, p, q, r, s, t, b = a.require ? "require" :"", c = a.valid ? "valid" :"invalid", d = a.length || 255, e = a.name || 0, f = a.fieldtype || 0, g = a.inputtype || "", h = a.checktype || "", i = a.hide || 0, j = a.label || 0, k = a.formname || "", l = a.notice || "";
        switch (a.onclick || "", n = a.placeholder || "", o = a.options || [], p = a.value || a.default || "", 
        q = "f_" + e, Aps.dom.create("div", q, [ b, c, "field" ], {
            fieldtype:f,
            fieldname:e,
            checktype:h,
            length:d,
            form:k,
            style:i ? "display:none;" :""
        }), j && vdom[q].append(Aps.dom.create("label", "l_" + e, "", {
            "for":"m_" + k + e
        }).html(j)), f) {
          case "text":
            vdom[q].append(Aps.dom.create("span", "m_" + k + e, [ "mainfield", e ]));

          case "input":
          case "button":
          case "textarea":
          case "select":
            vdom[q].append(Aps.dom.create(f, "m_" + k + e, [ "mainfield", e ], {
                placeholder:n,
                value:p,
                type:g
            }));
            break;

          case "radio":
            r = 1 == Object.keys(o).length ? "checked" :"";

          case "checkbox":
            for (s in o) vdom[q].append(Aps.dom.create("label", "l_" + k + e + s, f + "label", {
                "for":"o_" + k + e + s
            }).append(Aps.dom.create("input", "o_" + k + e + s, f + "input", {
                type:f,
                name:e,
                value:s,
                checked:r
            })).append(o[s].label));
        }
        switch (f) {
          case "textarea":
          case "text":
            vdom["m_" + k + e].html(p);
            break;

          case "select":
            vdom["m_" + k + e].append(Aps.dom.create("option", "o_default", "", {
                disabled:"disabled",
                selected:"selected"
            }));
            for (s in o) t = p && p == s ? "selected" :"", vdom["m_" + k + e].append(Aps.dom.create("option", "o_" + k + e + s, f + "option", {
                name:e,
                value:s,
                selected:t
            }).append(o[s].label));
        }
        return l && vdom[q].append(Aps.former.generateNotice(l)), vdom[q];
    },
    generateNotice:function(a) {
        var b = a.type;
        return "propup" == b ? "<span class='important' onclick=\"Aps.gui.propup('" + a.title + "','" + a.content + "')" + '"' + ">" + a.label + "</span>" :"<p>" + a.content + "</p>";
    },
    checkForm:function(a, b) {
        var d, e, f, c = a._vlist || 0;
        if (a = c ? a.list :a || 0, !a) throw TypeError(a);
        for (d = a.length, e = 0, f = 0; f < a.length && this.checkField(a[f], b || 0); f++) e++;
        return e == d ? this.form :0;
    },
    checkField:function(a, b) {
        var c, d, e, g, h, i, j, k, l, m;
        switch (b = b || 0, c = a.hasClass("require") && a.hasClass("valid"), d = a.attr("fieldtype"), 
        e = a.attr("fieldname"), a.attr("form"), g = a.attr("checktype") || 0, h = a.find("label"), 
        i = parseInt(a.attr("length")), j = a.find(".mainfield").attr("placeholder"), k = a.hasClass("valid") ? !0 :!1, 
        d) {
          case "input":
          case "select":
            l = a.find(".mainfield").value();
            break;

          case "radio":
            l = a.find("input:checked") ? a.find("input:checked").value() :"";
            break;

          case "checkbox":
            a.finds("input:checked") ? (m = [], a.finds("input:checked").each(function(a) {
                m.push(a.value());
            }), l = m) :l = "";
            break;

          case "text":
            l = a.find("span").text();
            break;

          case "textarea":
            l = a.find("textarea").el.value;
            break;

          case "summernote":
            l = a.find(".note-editable.panel-body").html();
            break;

          case "number":
            l = parseFloat(a.find(".mainfield").value());
        }
        return b || !c || l && "" != l && " " != l ? k ? i < l.length ? (Aps.gui.alert(i18n("WRONG_INPUT"), i18n("WRONG_LENGTH", {
            txt:h.text() || j,
            length:i
        })), a.find(d).focus(), !1) :this.checkType(l, g, a.find(d)) ? (l && (e.indexOf(".") > 0 ? this.form = Aps.mixer.setChildValue(this.form, e, l) :this.form[e] = l), 
        l ? l :!0) :void 0 :!0 :(Aps.gui.alert(i18n("WRONG_INPUT"), i18n("FIELD_REQUIRE", {
            txt:h ? h.text() :j
        }), {
            onOk:function() {
                a.find(".mainfield").focus();
            }
        }), !1);
    },
    checkType:function(a, b, c) {
        return b ? Aps.former["check_" + b](a, c) :1;
    },
    check_mobile:function(a, b) {
        var c = /^1[3|4|5|6|7|8][0-9]\d{8}$/i;
        return "" != a && c.test(a) ? !0 :(Aps.gui.alert(i18n("WRONG_MOBILE"), i18n("WRONG_MOBILE_MSG"), {
            onOk:function() {
                VD(b).animateCss("errorFocus slow").focus();
            }
        }), !1);
    },
    check_code:function(a, b) {
        var c = /^\d{4,}$/;
        return "" != a && c.test(a) ? !0 :(Aps.gui.alert(i18n("WRONG_VCODE"), i18n("WRONG_VCODE_MSG"), {
            onOk:function() {
                VD(b).focus();
            }
        }), !1);
    },
    check_password:function(a, b) {
        return "" == a || a.length < 6 ? (Aps.gui.alert(i18n("WRONG_PASS"), i18n("WRONG_PASS_MSG"), {
            onOk:function() {
                VD(b).focus();
            }
        }), !1) :!0;
    },
    check_idNumber:function(a, b) {
        var c = /^\d{15}(\d{2}[A-Za-z0-9])?$/;
        return "" != a && c.test(a) ? !0 :(Aps.gui.alert(i18n("WRONG_IDNUMBER"), i18n("WRONG_IDNUMBER_MSG"), {
            onOk:function() {
                VD(b).focus();
            }
        }), !1);
    },
    check_email:function(a, b) {
        var c = /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
        return "" != a && c.test(a) ? !0 :(Aps.gui.alert(i18n("WRONG_EMAIL"), i18n("WRONG_EMAIL_MSG"), {
            onOk:function() {
                VD(b).focus();
            }
        }), !1);
    },
    check_nickname:function(a, b) {
        var c = /^[\u8e00-\u9fa5A-Za-z0-9-_]*$/;
        return "" != a && c.test(a) ? !0 :(Aps.gui.alert(i18n("WRONG_NICKNAME"), i18n("WRONG_NICKNAME_MSG"), {
            onOk:function() {
                VD(b).focus();
            }
        }), !1);
    },
    confirm:function(a, b) {
        Aps.gui.submited(), 0 !== a.status ? Aps.gui.toast(Aps.cajax.getMessage(a)) :(Aps.gui.toast(i18n("SUCCESS")), 
        Aps.user.connect(!0), setTimeout(function() {
            var b = Aps.former.options.call;
            b && "string" == typeof b ? Aps.router.open(b, "new") :b && "function" == typeof b ? (Aps.former.options.callParams.push(a.content), 
            b(Aps.former.options.callParams)) :Aps.router.reload();
        }, b || 2e3));
    }
}), Aps.user = Aps.fn({
    userid:Aps.local.get("userid"),
    openid:Aps.local.get("openid"),
    token:Aps.local.get("token"),
    avatar:Aps.local.get("avatar"),
    nickname:Aps.local.get("nickname"),
    tokenexpire:parseInt(Aps.local.get("tokenexpire")),
    quickLoginOn:1,
    quickLoginMode:{
        emailLogin:"EN" == Aps.setting.language || CONFIGS.emailLogin || 0,
        mobileLogin:"ZHCN" == Aps.setting.language || CONFIGS.mobileLogin || 0,
        wechatLogin:CONFIGS.wechatLogin || 0,
        facebookLogin:CONFIGS.facebookLogin || 0
    },
    init:function() {
        this.userid = Aps.local.get("userid"), this.openid = Aps.local.get("openid"), this.token = Aps.local.get("token"), 
        this.tokenexpire = parseInt(Aps.local.get("tokenexpire"));
    },
    islogin:function() {
        return this.userid;
    },
    checkTokenExpire:function() {
        this.isTokenExpired() ? this.clearUser() :this.isTokenAlmostExpired() && this.updateToken();
    },
    checkOpenId:function() {
        return this.openid || this.getOpenid();
    },
    isTokenExpired:function() {
        var a = parseInt(new Date().getTime() / 1e3);
        return this.tokenexpire ? this.tokenexpire :0, a > this.tokenexpire;
    },
    isTokenAlmostExpired:function() {
        var a = parseInt(new Date().getTime() / 1e3), b = this.tokenexpire - a <= CONFIGS.tokenRefreshCycle;
        return 0 > b;
    },
    hasOpenid:function() {
        return this.openid;
    },
    setOpenid:function(a) {
        this.setProperty("openid", a);
    },
    getOpenid:function(a) {
        return a && (location.href = CONFIGS.urihost + "getWxOpenid?callbackurl=" + location), 
        this.openid ? this.openid :(location.href = CONFIGS.urihost + "getWxOpenid?callbackurl=" + location, 
        void 0);
    },
    updateToken:function() {
        this.resetOptions(), this.setOptions({
            needLogin:1
        }), this.setAction("updateToken"), this.setCallback(this.updateTokenCallback), this.setExpire(3888e3), 
        Aps.cajax.request(Aps.user.options);
    },
    getUserid:function() {
        return 0 == this.userid || "undefined" == typeof this.userid ? (this.quickLoginOn && Aps.user.quickLogin(".app"), 
        !1) :this.userid;
    },
    getToken:function() {
        return 0 == this.token || "undefined" == typeof this.token ? (Aps.user.quickLogin(".app"), 
        !1) :this.token;
    },
    connect:function(a) {
        Aps.user.init(), Aps.user.userid && Aps.user.post("getUserProfile", Aps.user.statusConfirm, {}, {
            needLogin:1,
            expire:7200,
            update:a || 0
        });
    },
    fingerOauth:function(a, b, c) {
        return "undefined" == typeof plus ? (Aps.gui.toast(i18n("FINGER_NOT_SUPPORT"), "warning", 2e3), 
        void 0) :("undefined" != typeof plus && plus.fingerprint.isSupport() && plus.fingerprint.isEnrolledFingerprints() ? plus.fingerprint.authenticate(function() {
            "function" == typeof a && a();
        }, function() {
            "function" == typeof b && b();
        }, {
            message:c || i18n("NEED_FINGER_OAUTH")
        }) :"undefined" == typeof plus || plus.fingerprint.isSupport() ? "function" == typeof a && a() :Aps.gui.toast(i18n("FINGER_NOT_SUPPORT"), "warning", 2e3), 
        void 0);
    },
    checkNewNotification:function(a) {
        Aps.user.userid && Aps.user.post("checkNewNotification", Aps.user.notificationConfirm, {}, {
            needLogin:1,
            expire:1200,
            update:a || 0
        });
    },
    readNotification:function(a, b) {
        var c, d;
        Aps.user.forcedLogin(), a = a || 0, b = b || 0, c = {
            userid:Aps.user.userid,
            token:Aps.user.token
        }, b && (d = vdom("#" + b + " .notice"), d && (c.notificationid = b, d.animateCss("pullOutUp fastest", function() {
            d.remove();
        }))), a && vdom(".notice") && (c.readall = 1), Aps.user.post("readNotification", a ? Aps.user.readAllNotificationConfirm :Aps.user.notificationConfirm, c, {
            expire:1200,
            update:update || 0
        });
    },
    clearUser:function() {
        Aps.local.remove("userid"), Aps.local.remove("token"), Aps.local.remove("tokenexpire");
    },
    updateTokenCallback:function(a) {
        if (Aps.cajax.successful(a)) {
            var c = {
                userid:a.content.userid,
                token:a.content.token,
                expire:a.content.expire
            };
            Aps.user.setProperty("userid", c.userid), Aps.user.setProperty("token", c.token), 
            Aps.user.setProperty("tokenexpire", c.expire), Aps.user.refresh();
        }
    },
    readNotificationConfirm:function() {
        Aps.debugger.add("ok");
    },
    readAllNotificationConfirm:function(a) {
        Aps.cajax.successful(a) ? (Aps.gui.toast("Read all success."), Aps.contents.listMessage(1, 15, "messageList", 1)) :Aps.gui.toast(Aps.cajax.getMessage(a));
    },
    logout:function() {
        return Aps.user.userid ? (Aps.gui.confirm(i18n("SIGN_OUT"), i18n("CONFIRM_OUT"), {
            onOk:function() {
                Aps.user.clearUser(), Aps.router.close();
            }
        }), void 0) :(Aps.gui.toast(i18n("NEED_LOGIN"), i18n("WARNING")), void 0);
    },
    statusConfirm:function(a) {
        0 !== a.status && (Aps.user.clearUser(), Aps.user.quickLogin(".app"), Aps.gui.toast(Aps.cajax.getMessage(a)));
    },
    notificationConfirm:function(a) {
        Aps.cajax.successful(a) ? (vdom(".tabBar") && vdom(".tabBar .tabs.my").append(ApsMd.core.notice.point), 
        vdom(".setting") && vdom(".settings.notification").append(ApsMd.core.notice.point)) :(vdom(".tabBar .tabs .notice") && vdom(".tabBar .tabs .notice").remove(), 
        vdom(".setting .settings .notice") && vdom(".setting .settings .notice").remove());
    },
    personalCenter:function(a) {
        Aps.user.userid ? Aps.user.post("getUserProfile", Aps.user.personalCenterCall, {}, {
            needLogin:1,
            expire:7200,
            update:a || 0
        }) :Aps.user.quickLogin();
    },
    personalCenterCall:function(a) {
        var b, c;
        Aps.cajax.successful(a) ? (b = vdom(".personal"), c = Aps.cajax.getData(a), b.find(".avatar img").attr("src", c.avatar ? c.avatar + "!avatar" :CONFIGS.defaultAvatar), 
        b.find(".nickname").text(c.nickname || i18n("DEFAULT_NAME")), b.find(".verifyinfo span").text(ENCRYPT.middle(c.mobile || c.email || "")), 
        vdom("#logOut").attr("onclick", "Aps.user.logout()").find(".title").text(i18n("SIGN_OUT")), 
        ACCOUNT.safeMode && vdom(".safeMode").addClass("active")) :(vdom("#logOut").attr("onclick", "Aps.user.quickLogin()").find(".title").text(i18n("SING_IN")), 
        Aps.gui.toast(a.message));
    },
    updateInfo:function() {
        if (this.forcedLogin()) {
            var a = Aps.former.checkForm(vlist(".field.valid"));
            a && this.post("updateUserInfo", this.updateInfoCall, a, {
                needLogin:1,
                update:1
            });
        }
    },
    updateInfoCall:function(a) {
        return Aps.cajax.successful(a) ? (Aps.gui.toast(a.message || "Saved!", "success"), 
        Aps.metting.request("my", "Aps.user.personalCenter(1);"), void 0) :(9999 == a.status ? Aps.user.quickLogin() :Aps.gui.toast(a.message || "Network Error!", a.status ? "success" :"warning"), 
        void 0);
    },
    personalInfo:function(a) {
        Aps.user.post("getUserProfile", Aps.user.personalInfoCall, {}, {
            needLogin:1,
            expire:7200,
            update:a || 0
        });
    },
    personalInfoCall:function(a) {
        return Aps.cajax.successful(a) ? (vdom("#content").html(Aps.mixer.mix(ApsMd.page.personal, a.content)), 
        void 0) :(9999 == a.status ? Aps.user.quickLogin() :Aps.gui.toast(a.message || "Network Error!", a.status ? "success" :"warning"), 
        void 0);
    },
    mobileConfirm:function() {
        var a = Aps.former.checkForm(vlist(".field.valid"));
        Aps.contents.send(a, "mobileConfirm");
    },
    mobileCodeRequest:function(a) {
        this.post("requestMobileCode", this.sendCallback, {
            mobile:a
        }, {
            expire:30
        });
    },
    emailCodeRequest:function(a) {
        this.post("requestEmailCode", this.sendCallback, {
            email:a
        }, {
            expire:30
        });
    },
    mobileLoginRequest:function(a, b) {
        this.post("mobileLogin", this.loginCallback, {
            code:b,
            mobile:a
        }, {
            expire:30
        });
    },
    emailLoginRequest:function(a, b) {
        this.post("emailLogin", this.loginCallback, {
            code:b,
            email:a
        }, {
            expire:30
        });
    },
    requestMobileCode:function() {
        var a = vdom("#ApsMobile");
        Aps.former.check_mobile(a.value(), a.el) && Aps.user.mobileCodeRequest(a.value());
    },
    requestEmailCode:function() {
        var a = vdom("#ApsEmail");
        Aps.former.check_email(a.value(), a.el) && Aps.user.emailCodeRequest(a.value());
    },
    mobileLogin:function() {
        var a = vdom("#ApsMobile"), b = vdom("#ApsVerifyCode");
        Aps.former.check_mobile(a.value(), a.el) && Aps.former.check_code(b.value(), b.el) && Aps.user.mobileLoginRequest(a.value(), b.value());
    },
    emailLogin:function() {
        var a = vdom("#ApsEmail"), b = vdom("#ApsEmailCode");
        Aps.former.check_email(a.value(), a.el) && Aps.former.check_code(b.value(), b.el) && Aps.user.emailLoginRequest(a.value(), b.value());
    },
    regist:function() {
        var a = Aps.former.checkForm(vlist(".form.regist .field.valid"));
        if (a) {
            if (a.confirmPassword !== a.password) return Aps.gui.alert(i18n("WRONG_PASS"), i18n("PASS_NOTMATCH")), 
            void 0;
            delete a.confirmPassword, Aps.user.post("regist", Aps.user.loginCallback, a, {
                update:1
            });
        }
    },
    passwordLogin:function() {
        var a = Aps.former.checkForm(vlist(".form.login .field.valid"));
        a && Aps.user.post("passwordLogin", Aps.user.loginCallback, a, {
            update:1
        });
    },
    wechatLogin:function(a) {
        var b = Aps.setting.isMobile ? "mobile" :"pc", c = a || location.href;
        location.href = CONFIGS.wxhost + "?device=" + b + "&callbackurl=" + c;
    },
    quickLogin:function(a, b) {
        var c;
        a = a || "body", b = b || "full", vdom(".ApsLogin") || (vdom(a).append(vdom.vm_quickLogin || VD(Aps.mixer.mix(ApsMd.core.quickLogin[b], Aps.user.quickLoginMode), "vm_quickLogin")), 
        c = vdom(".ApsLogin"), Aps.gui.animateOn ? c.find(".prop").animateCss("fadeInRight fast").show() :c.fadeIn(500));
    },
    quickLoginClose:function() {
        var b = vdom(".ApsLogin");
        Aps.gui.animateOn ? b.find(".prop").animateCss("fadeOutLeft faster", function() {
            b.fadeOut();
        }) :b.fadeOut();
    },
    sendCallback:function(a) {
        Aps.cajax.successful(a) ? (Aps.gui.toast(Aps.cajax.getMessage(a)), Aps.counter.countdown("ApsRequestCode", 60), 
        VD("#ApsVerifyCode").focus()) :Aps.gui.toast(Aps.cajax.getMessage(a));
    },
    loginCallback:function(a) {
        var c;
        if (Aps.cajax.successful(a)) {
            if (a = Aps.cajax.getData(a), c = {
                userid:a.userid || a.id,
                token:a.token || a.token,
                expire:a.expire || a.expire
            }, Aps.gui.toast(i18n("LOGIN_SUC")), Aps.user.setProperty("userid", c.userid), Aps.user.setProperty("token", c.token), 
            Aps.user.setProperty("tokenexpire", c.expire), VD(".ApsLogin")) return Aps.router.switch("./index.html", -1), 
            void 0;
            Aps.user.quickLoginClose(), setTimeout(function() {
                Aps.router.reload();
            }, 1500);
        } else Aps.gui.alert(i18n("LOGIN_FAL"), Aps.cajax.getMessage(a));
    },
    forcedLogin:function(a) {
        var a = a || 0;
        return Aps.user.islogin() ? 1 :(Aps.gui.confirm(i18n("AUTHORATION"), i18n("NEED_LOGIN"), {
            onOk:function() {
                vdom(".ApsPopup").remove(), Aps.user.quickLoginOn ? Aps.user.quickLogin() :Aps.router.open("login.html");
            },
            onCancel:function() {
                return a && Aps.router.back() || 1;
            }
        }), void 0);
    },
    suggest:function() {
        var a = Aps.former.checkForm(vlist(".form .field.valid"));
        a && Aps.contents.send(a, "sendSuggest", Aps.contents.suggestCall, {
            needLogin:1
        });
    }
}), Aps.promotion = Aps.fn({
    promoterid:Aps.local.get("promoterid"),
    promoteexpire:Aps.local.get("promoteexpire"),
    init:function() {
        this.promoterid = Aps.local.get("promoterid") || 0, this.promoteexpire = Aps.local.get("promoteexpire") || 0;
    },
    clear:function() {
        Aps.local.remove("promoterid"), Aps.local.remove("promoteexpire");
    },
    set:function(a, b, c) {
        this.setProperty("promoterid", a), this.setProperty("promoteexpire", parseInt(new Date().getTime() / 1e3) + parseInt(c));
    },
    check:function() {
        return this.init(), "undefined" == typeof this.promoterid || "" === this.promoterid ? !1 :this.promoteexpire < parseInt(new Date().getTime() / 1e3) ? (this.clear(), 
        !1) :this.promoterid === USER.userid ? (this.clear(), !1) :!0;
    },
    createDownloadImage:function(a) {
        html2canvas(document.getElementById("post"), {
            scale:1,
            useCORS:!0
        }).then(function(b) {
            var c = b.toDataURL("image/jpg");
            VD(a).html("<img src=" + c + ">"), Aps.gui.submited("生成成功,请长按图片保存到手机 或 直接分享给朋友!");
        });
    },
    getCommission:function(a, b) {
        this.post("getCommission", this.initCommission, {
            id:a,
            type:b
        }, {
            expire:60
        });
    },
    initCommission:function(a) {
        0 == a.status && (VD(".commission").text(a.content), VD(".promotePatch").show());
    }
}), Aps.order = Aps.fn({
    newOrder:function(a, b, c) {
        var d = Aps.local.once("preorder"), e = d || {
            itemId:a,
            itemType:b
        } || 0;
        Aps.local.set("orderInfo", e), this.setParams({
            itemId:a,
            itemType:b
        }), Aps.local.set("orderInfo", {
            itemId:a,
            itemType:b
        }), "string" == typeof registid && (this.options.parameters.parameters.registid = registid), 
        Aps.promotion.check() && (this.options.parameters.parameters.promoterid = Aps.promotion.promoterid), 
        this.setAction(""), this.setUpdate(), this.setCallback(), this.setExpire(1), Aps.cajax.request(this.options), 
        this.post("newOrder", c || Aps.pay.wxJsApiPay, {
            id:id,
            type:type
        }, {
            expire:1
        });
    }
}), Aps.pay = Aps.fn({
    orderInfo:Aps.local.get("orderInfo") || {},
    iapChannel:0,
    IAPOrders:[],
    pointPay:function() {
        console.log("pointPay");
    },
    IAP:function() {
        plus && plus.payment.getChannels(function(a) {
            for (var b in a) "appleiap" == channel[i].id && (iapChannel = channel[i], iapChannel.requestOrder(IAPOrders, function(a) {
                var b, c;
                for (b in a) c = a[b], outLine("Title:" + c.title + "Price:" + c.price + "Description:" + c.description + "ProductID:" + c.productid);
            }, function(a) {
                outLine("获取支付通道失败：" + a.message);
            }));
        });
    },
    wxJsApiPay:function(a) {
        VD("button").attr("disabled", "disabled"), 0 == Aps.user.openid && Aps.user.getOpenid(), 
        Aps.cajax.successful(a) ? (this.resetOptions(), this.setParams({
            orderid:a.content,
            openid:Aps.user.openid
        }), this.setAction("wxJsapiPay"), this.setCallback(this.wxJsApiPayCall), this.setExpire(3), 
        Aps.cajax.request(this.options)) :520 == a.status ? (Aps.gui.toast(Aps.cajax.getMessage(a)), 
        setTimeout(function() {
            (Aps.pay.orderInfo.itemType = "event") ? Aps.router.back(-1) :Aps.router.reload();
        }, 2500)) :(Aps.user.quickLogin(".app"), Aps.gui.toast(Aps.cajax.getMessage(a)));
    },
    wxJsApiPayCall:function(a) {
        if (Aps.debugger.add("微信支付回调:"), Aps.cajax.successful(a)) {
            var b = a.content;
            WeixinJSBridge.invoke("getBrandWCPayRequest", {
                appId:String(b.appId),
                timeStamp:String(b.timeStamp),
                nonceStr:String(b.nonceStr),
                "package":String(b.package),
                signType:String(b.signType),
                paySign:String(b.paySign)
            }, function(a) {
                Aps.debugger.add("微信返回消息"), "get_brand_wcpay_request:ok" == a.err_msg ? (Aps.gui.toast("支付成功"), 
                Aps.debugger.add("支付成功"), setTimeout(function() {
                    (Aps.pay.orderInfo.itemType = "event") ? Aps.router.back(-1) :(Aps.pay.orderInfo.itemType = "vippackage") ? Aps.router.open("myVip.html", "new") :Aps.router.reload();
                }, 2500)) :(Aps.debugger.add("支付取消"), Aps.gui.alert("支付失败", "请重新支付或查看其他课程."), VD("button").removeAttr("disabled"));
            });
        } else 520 == a.status ? (Aps.gui.toast(Aps.cajax.getMessage(a)), setTimeout(function() {
            "eventRegist.html" == Aps.query.currentPage() ? Aps.router.back(-1) :Aps.router.reload();
        }, 2500)) :(Aps.gui.toast(Aps.cajax.getMessage(a)), VD("button").removeAttr("disabled"));
    }
}), Aps.uploader = Aps.fn({
    mode:"oss",
    types:{
        image:{
            title:"image",
            extensions:"jpg,gif,png,bmp,jpeg",
            max:"5mb"
        },
        video:{
            title:"video",
            extensions:"mp4,mov,mpg",
            max:"500mb"
        },
        audio:{
            title:"audio",
            extensions:"mp3,ogg,wav",
            max:"100mb"
        },
        document:{
            title:"document",
            extensions:"pdf,pptx,xlsx,numbers,key,pages,docx,doc,xls",
            max:"100mb"
        }
    },
    imageUploaded:function(a) {
        var b = a.code ? CONFIGS.reshost + a.data :a.content.url;
        vdom("#ApsUploadImage img").attr("src", b + "!avatar"), vdom("#ApsUploadImageUrl").value(b);
    },
    simpleUpload:function(a, b, c, d, e) {
        var f;
        e = e || "oss", Aps.uploader.mode = e, f = new plupload.Uploader({
            runtimes:"html5,flash,silverlight,html4",
            browse_button:b,
            container:document.getElementById(c),
            multi_selection:!1,
            unique_names:!0,
            url:"oss" == e ? CONFIGS.apihost :APILIST.getApiUrl("uploadServer"),
            filters:{
                mime_types:[ {
                    title:Aps.uploader.types[a].title,
                    extensions:Aps.uploader.types[a].extensions
                } ],
                max_file_size:Aps.uploader.types[a].max,
                prevent_duplicates:!0
            },
            init:{
                PostInit:function() {},
                FilesAdded:function(a, b, c) {
                    "oss" == Aps.uploader.mode && OSS.set_upload_param(f, "", !1, c), a.start();
                },
                BeforeUpload:function(b, c) {
                    "oss" == Aps.uploader.mode && OSS.set_upload_param(b, c.name, !0, a);
                },
                UploadProgress:function(a, b) {
                    Aps.gui.submitProgress(i18n("UPLOADING"), b.percent);
                },
                FileUploaded:function(a, b, c) {
                    if (200 == c.status) {
                        Aps.gui.submited(i18n("DONE"));
                        var e = JSON.parse(c.response);
                        d(e);
                    } else 203 == c.status ? Aps.gui.submited(i18n("UPLOAD_FAL")) :Aps.gui.submited(i18n("UPLOAD_FAL"));
                },
                Error:function(a, b) {
                    -600 == b.code ? Aps.gui.submited(i18n("FILE_TOO_LARGE")) :-601 == b.code ? Aps.gui.submited(i18n("UNKNOW_FILE_EXT")) :-602 == b.code ? Aps.gui.submited(i18n("UPLOADED")) :Aps.gui.submited("Error xml:" + b.response);
                }
            }
        }), f.init();
    }
}), Aps.jssdk = Aps.fn({
    apiList:[ "onWXDeviceBluetoothStateChange", "onWXDeviceStateChange", "openProductSpecificView", "addCard", "chooseCard", "openCard", "translateVoice", "getNetworkType", "openLocation", "getLocation", "onMenuShareTimeline", "onMenuShareAppMessage", "onMenuShareQQ", "onMenuShareWeibo", "onMenuShareQZone", "chooseImage", "previewImage", "uploadImage", "downloadImage", "closeWindow", "scanQRCode", "chooseWXPay", "hideOptionMenu", "showOptionMenu", "hideMenuItems", "showMenuItems", "hideAllNonBaseMenuItem", "showAllNonBaseMenuItem", "startScanWXDevice", "stopScanWXDevice", "onWXDeviceBindStateChange", "onScanWXDeviceResult", "onReceiveDataFromWXDevice", "startRecord", "stopRecord", "onVoiceRecordEnd", "playVoice", "pauseVoice", "stopVoice", "onVoicePlayEnd", "uploadVoice", "downloadVoice", "openWXDeviceLib", "closeWXDeviceLib", "getWXDeviceInfos", "sendDataToWXDevice", "disconnectWXDevice", "getWXDeviceTicket", "connectWXDevice" ],
    getConf:function(a, b) {
        return {
            debug:!1,
            appId:String(a.content.appId),
            timestamp:String(a.content.timestamp),
            nonceStr:String(a.content.nonceStr),
            signature:String(a.content.signature),
            jsApiList:b || Aps.jssdk.apiList
        };
    },
    init:function(a) {
        "wx" == Aps.setting.device && (this.setParams({
            url:location.href
        }), this.setAction("getJssdkConfig"), this.setCallback(Aps.jssdk[a]), this.setExpire(3600), 
        Aps.cajax.request(this.options));
    },
    share:function(a) {
        var c = Aps.jssdk.getConf(a, [ "onMenuShareAppMessage", "onMenuShareTimeline" ]);
        wx.config(c), wx.ready(function() {
            wx.onMenuShareAppMessage(Aps.share.getParams()), wx.onMenuShareTimeline(Aps.share.getParams("timeline"));
        });
    },
    hideOption:function(a) {
        var c = Aps.jssdk.getConf(a, [ "hideOptionMenu" ]);
        wx.config(c), wx.ready(function() {
            wx.hideOptionMenu();
        });
    }
}), Aps.share = Aps.fn({
    init:function(a, b, c, d) {
        return this.setParams({
            title:a || CONFIGS.appname,
            desc:b || CONFIGS.slogan,
            link:d,
            imgUrl:c,
            appName:CONFIGS.appname,
            wxAppid:CONFIGS.wxappid,
            imageWidth:250,
            imageHeight:250
        }), this.options.parameters.parameters;
    },
    getParams:function() {
        return this.options.parameters.parameters;
    },
    generateLink:function() {
        return Aps.user.userid ? (Aps.query.set("promoterid", Aps.user.userid), Aps.query.set("promoteduration", 604800), 
        (location.origin + location.pathname + Aps.query.toString()).replace("/web/", "/mobile/")) :location.href;
    },
    generateQrcode:function(a) {
        var a = a || Aps.share.generateLink();
        return Aps.qrcode.toImage(a);
    },
    propShare:function(a) {
        var a = a || Aps.share.generateLink();
        VD("body").append(VD("<div></div>").attr("id", "postContainer").css({
            width:0,
            height:0,
            overflow:"hidden"
        })), VD("#postContainer").append(VD("<div></div>").attr("id", "post").addClass("content post").append(VD(".swiperContainer").HTML()).append(VD(".pageInfo").HTML()).append(Aps.share.generateQrcode(a))), 
        html2canvas(document.getElementById("post"), {
            scale:1,
            useCORS:!0
        }).then(function(a) {
            var b, c;
            VD("#postContainer").remove(), b = a.toDataURL("image/jpg"), c = new Image(), c.src = b, 
            VD(".ApsPropupContent p").html(c);
        });
    }
}), Aps.player = Aps.fn({
    init:function() {
        var h, g, i, a = this.getQueryStringValue("lang") || "zh-CN", b = this.getQueryStringValue("stretching") || "auto", e = (document.querySelector("select[name=lang]"), 
        document.querySelector("select[name=stretching]"), document.querySelectorAll("select[name=sources]"));
        for (e.length, mejs.i18n.language(a), g = document.querySelectorAll("video, audio"), 
        i = g.length, h = 0; i > h; h++) new MediaElementPlayer(g[h], {
            stretching:b,
            pluginPath:"../plugins/mediaelement/",
            success:function(a) {
                var b = document.getElementById(a.id + "-rendername");
                a.addEventListener("loadedmetadata", function() {
                    var c = a.originalNode.getAttribute("src").replace("&amp;", "&");
                    null !== c && void 0 !== c && (b.querySelector(".src").innerHTML = '<a href="' + c + '" target="_blank">' + c + "</a>", 
                    b.querySelector(".renderer").innerHTML = a.rendererName, b.querySelector(".error").innerHTML = "");
                }), a.addEventListener("error", function(a) {
                    b.querySelector(".error").innerHTML = "<strong>Error</strong>: " + a.message;
                });
            }
        });
    },
    getQueryStringValue:function(a) {
        return decodeURIComponent(location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent(a).replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
    }
}), Aps.map = Aps.fn({
    center:[ 110.3411189, 20.03997361 ],
    resizeEnable:!0,
    zoom:14,
    list:[],
    current:{},
    marks:[],
    map:0,
    init:function(a, b) {
        a = a || "MAP", b = b || {
            resizeEnable:this.resizeEnable,
            center:this.center,
            zoom:this.zoom
        }, this.map = new AMap.Map(a, b), this.clear();
    },
    clear:function() {
        this.map.clearMap();
    },
    focus:function(a) {
        this.clear(), this.setCurrent(Aps.searchbar.res[a]), this.addMarks([ this.current ]), 
        this.map.setCenter(this.current.location), this.map.setZoom(16), this.refreshView();
    },
    setCurrent:function(a) {
        this.current = a, this.current.location = this.converLocation(a.location), VD(".pageInfo").length > 0;
    },
    setMarkList:function(a) {
        var c, d, b = {};
        for (c = 0; c < a.length; c++) {
            b[a[c]["id"]] = {};
            for (d in a[c]) b[a[c]["id"]][d] = "location" !== d ? a[c][d] :this.converLocation(a[c][d]);
        }
        this.list = b;
    },
    addMarks:function(a) {
        var b, c;
        Aps.gui.globalLoad.start(), b = a.data ? a.data.list :a, Aps.map.clear(), Aps.map.listToMarks(b), 
        Aps.map.setMarkList(b);
        for (c in Aps.map.marks) new AMap.Marker({
            map:Aps.map.map,
            title:Aps.map.marks[c].id,
            position:[ Aps.map.marks[c].position[1], Aps.map.marks[c].position[0] ],
            offset:new AMap.Pixel(-12, -36)
        }).on("click", Aps.map.markSelect);
        Aps.map.map.setFitView(), Aps.gui.globalLoad.success();
    },
    listToMarks:function(a) {
        var c, b = [];
        for (c in a) b.push({
            id:a[c].id,
            position:this.converLocation(a[c].location)
        });
        this.marks = b;
    },
    refreshView:function(a, b) {
        var c;
        b = b || 0, c = b ? this.list[a] :this.current, VD(".pageInfo .name").html(c.name), 
        VD(".pageInfo .address span").html(c.address), VD(".pageInfo .open span.open_time").html(c.open_time), 
        VD(".pageInfo .open span.close_time").html(c.close_time), VD(".pageInfo .countRoom span").html(c.countRoom || 0), 
        VD(".pageInfo .countActive b").html(c.countActive || 0), VD(".navi").attr("onclick", "Aps.router.open('" + this.navUri(c) + "');"), 
        VD("#venueDetail").attr("onclick", "Aps.router.open('venueDetail.html?venueid=" + c.id + "');");
    },
    navUri:function(a) {
        return encodeURI("https://uri.amap.com/navigation?to=" + a.location[1] + "," + a.location[0] + "," + (a.name || "目的地") + "&mode=car");
    },
    markSelect:function(a) {
        var b = a.target.getTitle();
        Aps.map.map.setCenter(a.target.getPosition()), Aps.map.map.setZoom(16), Aps.map.refreshView(b, 1);
    },
    converLocation:function(a, b) {
        var c;
        return b = b || 0, a = "string" == typeof a ? a.split(",") :a, b && (c = [ locate[1], locate[0] ], 
        a = c), a;
    }
}), Aps.swip = Aps.fn({
    time:0,
    option:{
        selector:"#swiperContainer",
        pagination:".swiper-pagination",
        autoplay:3500,
        speed:500
    },
    init:function(a) {
        var b;
        a = a || this.option, b = a.selector || "#swiperContainer", VD(b) && new Swiper(a.selector || "#swiperContainer", a);
    }
}), Aps.searchbar = Aps.fn({
    needLogin:1,
    switcher:1,
    delay:500,
    time:500,
    timer:0,
    bar:vdom(".ApsSearchBar"),
    input:vdom(".ApsSearchBar .ApsSearchInput"),
    result:vdom(".ApsSearchResult"),
    actionDict:{
        searchAccount:i18n("ACCOUNTS"),
        searchAttachment:i18n("ATTACHMENTS")
    },
    res:{},
    filters:Aps.local.get("searchFilters") || {},
    startTimer:function() {
        this.clearTimer(), this.timer = setInterval(function() {
            Aps.searchbar.time <= 0 ? (clearInterval(Aps.searchbar.timer), Aps.searchbar.isInputDone() && Aps.searchbar.search(), 
            Aps.searchbar.clearTimer()) :Aps.searchbar.time -= 100;
        }, 100);
    },
    clearTimer:function() {
        clearInterval(this.timer), this.time = this.delay;
    },
    isInputDone:function() {
        return this.time <= 0 && vdom("#ApsSearchInput").value().length > 1;
    },
    isInputEmpty:function() {
        return 0 == vdom("#ApsSearchInput").value().length;
    },
    init:function(a) {
        return Aps.filters.action = a || "searchAccount", vdom(".ApsSearchBar") ? (vdom(".ApsSearchBar .ApsSearchInput").on("input", function() {
            Aps.searchbar.isInputDone() ? Aps.searchbar.search() :Aps.searchbar.isInputEmpty() ? Aps.searchbar.clear() :Aps.searchbar.startTimer();
        }), this) :void 0;
    },
    blur:function() {
        vdom(".ApsSearchBar").removeClass("searching");
    },
    changeAction:function(a) {
        Aps.filters.setAction(a), vlist("#ApsActionList li").removeClass("current"), vdom("#ApsCurrentAction").text(this.actionDict[a]), 
        vdom("#ApsActionList li." + a).addClass("current");
    },
    clear:function() {
        vdom(".ApsSearchBar").removeClass("searching"), vdom(".ApsSearchBar .ApsSearchInput").value(""), 
        vdom(".ApsSearchBar .ApsSearchResult").html("<div class='emptyInfo'>No result.</div>");
    },
    search:function() {
        vdom(".ApsSearchBar").addClass("searching"), this.setAction(Aps.filters.action), 
        this.setParams({
            keyword:vdom(".ApsSearchBar .ApsSearchInput").value(),
            page:1,
            size:25
        }), this.needLogin && this.addHeaders({
            userid:Aps.user.userid,
            token:Aps.user.token
        }), this.setCallback(this.searchCall), this.setExpire(30), Aps.gui.localLoad.start(".ApsSearchResult"), 
        Aps.cajax.request(this.options);
    },
    searchCall:function(a) {
        Aps.contents.listCall(a, "search", 0, 0, "search");
    }
}), Aps.qrcode = {
    options:{
        render:"image",
        width:256,
        height:256,
        typeNumber:-1,
        correctLevel:"undefined" != typeof QRErrorCorrectLevel ? QRErrorCorrectLevel.H :2,
        background:"#ffffff",
        foreground:"#000000"
    },
    toCanvas:function(a, b) {
        var c, d, e, f, g, h, i, j, k;
        for (b = b || this.options, b.text = a, c = new QRCode(b.typeNumber, b.correctLevel), 
        c.addData(a), c.make(), d = document.createElement("canvas"), d.width = b.width, 
        d.height = b.height, e = d.getContext("2d"), f = b.width / c.getModuleCount(), g = b.height / c.getModuleCount(), 
        h = 0; h < c.getModuleCount(); h++) for (i = 0; i < c.getModuleCount(); i++) e.fillStyle = c.isDark(h, i) ? b.foreground :b.background, 
        j = Math.ceil((i + 1) * f) - Math.floor(i * f), k = Math.ceil((h + 1) * g) - Math.floor(h * g), 
        e.fillRect(Math.round(i * f), Math.round(h * g), j, k);
        return d;
    },
    toImage:function(a) {
        var b = new Image();
        return b.src = this.toCanvas(a).toDataURL("image/png"), b;
    }
}, Aps.contents = Aps.fn({
    listCall:function(a, b, c, d, e, f) {
        var g, h, i, j, l, m, n, p, q, r, s, t;
        if (Aps.scrollView.endLoading(e || 0), g = "listContainer" + (e ? "_" + e :""), 
        h = e ? ".parallel_" + e :".ApsScrollView.current", !Aps.cajax.successful(a)) return 9999 == a.status ? Aps.user.quickLogin() :Aps.gui.localLoad.failed(h, a.message, 3e3), 
        void 0;
        if (Aps.gui.localLoad.success(h), i = VD(h, g), j = Aps.cajax.getData(a), l = j.list, 
        m = j.navi.max || 1, n = j.navi.page || 1, j.navi.size || 12, c = c || 0, b = b || "search", 
        p = d.animate || 0, q = d.mode || "general", r = d.emptyInfo || "No result.", s = function(a, b) {
            var b = b || "fadeInRight faster";
            i.append(VD["list" + a]), VD["list" + a].addClass("animated " + b);
        }, !c && i.empty(), l && l.length > 0) {
            for (t in l) "account" == b && (l[t].color = Aps.converter.exchange("categoryColor", l[t].category.title), 
            l[t].icon = Aps.converter.exchange("categoryIcon", l[t].category.title), l[t].description = l[t].description, 
            l[t].name = l[t].name ? ENCRYPT.middle(l[t].name) :"", l[t].remark1 = l[t].attachments[0] ? l[t].attachments[0].value :0, 
            l[t].remark2 = l[t].attachments[1] ? l[t].attachments[1].value :0), "category" == b && (l[t].color = Aps.converter.exchange("categoryColor", l[t].title), 
            l[t].icon = Aps.converter.exchange("categoryIcon", l[t].title), l[t].name = Aps.converter.exchange("categoryName", l[t].title)), 
            l[t]["_" + l[t]["title"]] = 1, VD(Aps.mixer.mix(ApsMd.list[b][q], l[t]), "list" + b + l[t].id), 
            p ? setTimeout(s, (p.delay || 50) * t, b + l[t].id, p.animate) :i.append(vdom["list" + b + l[t].id]);
            i.attr("max", m).attr("page", n).attr("inited", "inited");
        } else i.append('<p class="emptyInfo">' + r + "</p>").attr("inited", "inited"), 
        i.attr("max", 1).attr("page", n);
        Aps.switcher.clear(), "string" == typeof f && f();
    },
    searchCall:function(a) {
        Aps.contents.listCall(a, "search", "general", 0, "No result", 0);
    },
    detailCall:function(a, b, c) {
        if (!Aps.cajax.successful(a)) return Aps.gui.toast(a.message), 9999 == a.status && Aps.user.quickLogin(), 
        void 0;
        var d = Aps.cajax.getData(a);
        d["_" + Aps.converter.exchange("category", d["categoryid"])] = 1, "undefined" != typeof c ? c(d) :VD("#content").html(Aps.mixer.mix(ApsMd.page[b], d));
    },
    send:function(a, b, c, d) {
        var d = d || {};
        if ("object" != typeof a) return !1;
        if (Aps.gui.submiting(i18n("SUBMITING")), this.resetOptions(), this.setAction(b), 
        this.setParams(a), d.needLogin) {
            if (!Aps.user.forcedLogin()) return;
            this.addHeaders("userid", Aps.user.userid), this.addHeaders("token", Aps.user.token);
        }
        this.setCallback(c), this.setExpire(10), Aps.cajax.request(this.options);
    },
    sendCall:function(a) {
        return Aps.cajax.successful(a) ? (Aps.gui.submited(Aps.cajax.getMessage(a), "success", 3500), 
        void 0) :(Aps.gui.submited(Aps.cajax.getMessage(a), "failed"), void 0);
    },
    suggestCall:function(a) {
        return Aps.cajax.successful(a) ? (Aps.gui.submited(Aps.cajax.getMessage(a), "success", 3500), 
        setTimeout(function() {
            Aps.router.close();
        }, 3500), void 0) :(Aps.gui.submited(Aps.cajax.getMessage(a), "failed"), void 0);
    },
    checkCall:function(a, b, c) {
        var d, e, f, g, h, i;
        c = c || "收藏", d = VD("#" + b + "Btn"), e = parseInt(d.attr("typecode")), f = parseInt(d.attr("object_id")), 
        g = a.code ? 1 :0, h = d.children("i"), i = d.children("span"), d.attr("onclick", "Aps.contents." + b + "(this," + e + "," + f + ");"), 
        g ? h.removeClass("icon-collect").addClass("icon-collect-line") && i.text("" + c) :h.removeClass("icon-collect-line").addClass("icon-collect") && i.text("已" + c);
    },
    apiTest:function(a, b, c, d, e) {
        this.post(a, this.apiTestCall, b, c || d || e ? {
            needLogin:c || 0,
            update:d || 0,
            url:e || 0
        } :0);
    },
    apiTestCall:function(a) {
        Aps.cajax.successful(a) ? console.log(a) :(console.log(Aps.cajax.getMessage(a)), 
        Aps.gui.toast(Aps.cajax.getMessage(a)));
    },
    collect:function(a, b, c) {
        if (Aps.user.forcedLogin()) {
            var d = VD(a).hasClass("enabled") ? 1 :0;
            d ? this.post("cancelCollect", this.sendCall, {
                object_id:c,
                type:b,
                member_id:Aps.user.userid
            }, {
                update:1
            }) :this.post("collect", this.sendCall, {
                object_id:c,
                type:b,
                member_id:Aps.user.userid
            }, {
                update:1
            });
        }
    },
    check:function(a, b, c) {
        var d;
        Aps.user.forcedLogin() && (a = a || "collect", b = b || "venue", d = "active" == b ? 1 :2, 
        c = c || 1, VD("#" + a + "Btn").attr("typecode", d).attr("object_id", c), this.post(a + "Check", Aps.contents[a + "Check"], {
            object_id:c,
            type:d,
            member_id:Aps.user.userid
        }, {
            update:1
        }));
    },
    thumb:function(a) {
        if (Aps.user.forcedLogin()) {
            VD(a).hasClass("enabled") ? 1 :0;
        }
    }
}), function() {
    Aps.switcher.init(), Aps.setting.isWeixin && document.documentElement.classList.add("wx");
}();